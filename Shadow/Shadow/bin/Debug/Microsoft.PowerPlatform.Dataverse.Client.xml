<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.PowerPlatform.Dataverse.Client</name>
    </assembly>
    <members>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.AttributeData">
            <summary>
            Summary description for AttributeData
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.AttributeData.ActualValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.AttributeData.AttributeLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.AttributeData.AttributeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.AttributeData.DisplayValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.AttributeData.IsUnsupported">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.AttributeData.SchemaName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.BooleanAttributeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.BooleanAttributeData.BooleanOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.StringAttributeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.StringAttributeData.MaxLength">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.PicklistAttributeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.PicklistAttributeData.PicklistOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthenticationDetails">
            <summary>
            Details of expected authentication.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthenticationDetails.Success">
            <summary>
            True if probing returned a WWW-Authenticate header.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthenticationDetails.Authority">
            <summary>
            Authority to initiate OAuth flow with.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthenticationDetails.Resource">
            <summary>
            OAuth resource to request authentication for.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthorityResolver">
            <summary>
            Probes API endpoint to elicit a 401 response with the WWW-Authenticate header and processes the found information
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthorityResolver.#ctor(System.Net.Http.HttpClient,System.Action{System.Diagnostics.TraceEventType,System.String})">
            <summary>
            instantiate resolver, using specified HttpClient to be used.
            </summary>
            <param name="httpClient"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthorityResolver.ProbeForExpectedAuthentication(System.Uri,System.Boolean)">
            <summary>
            Attemtps to solicit a WWW-Authenticate reply using an unauthenticated GET call to the given endpoint.
            Parses returned header for details
            </summary>
            <param name="endpoint">endpoint to challenge for authority and resource</param>
            <param name="isOnPrem">if true, this is an OnPremsies server</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.ExecuteAuthenticateServiceProcessAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,System.Object,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Boolean,System.Security.SecureString,System.Boolean,Microsoft.Identity.Client.IAccount,Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache,System.String)">
            <summary>
            Executes Authentication against a service
            </summary>
            <param name="serviceUrl"></param>
            <param name="clientCredentials"></param>
            <param name="user"></param>
            <param name="clientId"></param>
            <param name="redirectUri"></param>
            <param name="promptBehavior"></param>
            <param name="isOnPrem"></param>
            <param name="authority"></param>
            <param name="userCert">Certificate of provided to login with</param>
            <param name="logSink">(optional) Initialized CdsTraceLogger Object</param>
            <param name="useDefaultCreds">(optional) if set, tries to login as the current user.</param>
            <param name="msalAuthClient">Object of either confidential or public client</param>
            <param name="clientSecret"></param>
            <param name="addVersionInfoToUri">indicates if the serviceURI should be updated to include the /web?sdk version</param>
            <param name="memoryBackedTokenCache">Memory Token Cache</param>
            <param name="tokenCacheStorePath">path to the token cache.</param>
            <returns>AuthenticationResult containing a JWT Token for the requested Resource and user/app</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.ObtainAccessTokenAsync(Microsoft.Identity.Client.IPublicClientApplication,System.Collections.Generic.List{System.String},Microsoft.Identity.Client.IAccount,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.ServiceModel.Description.ClientCredentials,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
             Token refresh flow for MSAL User Flows.
            </summary>
            <param name="publicAppClient">MSAL Client to use.</param>
            <param name="scopes">Scopes to send in.</param>
            <param name="account"></param>
            <param name="promptBehavior">prompting behavior</param>
            <param name="clientCredentials">user credential package</param>
            <param name="useDefaultCreds">should system default creds be used</param>
            <param name="logSink">logger to write logs too.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.ObtainAccessTokenAsync(Microsoft.Identity.Client.IConfidentialClientApplication,System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Acquires Confidential client token.
            </summary>
            <param name="confidentialAppClient">Confidential client application</param>
            <param name="scopes">Scope List</param>
            <param name="logSink">Logger to use</param>
            <returns>Authentication Result with updated token</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.TryGetAccountFromCache(Microsoft.Identity.Client.IPublicClientApplication,System.String)">
            <summary>
            For Public Client,  check the local cache to see if there is already a entry there for this user.
            </summary>
            <param name="publicAppClient">PubClient instance.</param>
            <param name="loginHint">UID of the user being searched for</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.GetUriBuilderWithVersion(System.Uri)">
            <summary>
            Forming version tagged UriBuilder
            </summary>
            <param name="discoveryServiceUri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.GetAuthorityFromTargetServiceAsync(System.Net.Http.IHttpClientFactory,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Boolean)">
            <summary>
            Get authority and resource for this instance.
            </summary>
            <param name="targetServiceUrl">URI to query</param>
            <param name="logger">Logger to write info too</param>
            <param name="clientFactory">HTTP Client factory to use for this request.</param>
            <param name="isOnPrem">if true, login is for an onprem server</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.AuthProcessor.ProcessMsalExecptionAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,System.Object,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache,System.String,Microsoft.Identity.Client.MsalException)">
            <summary>
            Process MSAL exception and provide common handlers.
            </summary>
            <param name="serviceUrl"></param>
            <param name="clientCredentials"></param>
            <param name="userCert"></param>
            <param name="clientId"></param>
            <param name="redirectUri"></param>
            <param name="promptBehavior"></param>
            <param name="isOnPrem"></param>
            <param name="authority"></param>
            <param name="logSink"></param>
            <param name="useDefaultCreds"></param>
            <param name="msalEx"></param>
            <param name="msalAuthClient"></param>
            <param name="tokenCacheStorePath"></param>
            <param name="memoryBackedTokenCache"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper">
            <summary>
            The encoding helper.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.UrlEncode(System.String)">
            <summary>
            URL encode the given string.
            </summary>
            <param name="message">String to URL encode</param>
            <returns>URL encoded string</returns>
            <remarks>This method encodes the space ' ' character as "+" rather than "%20".</remarks>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.UrlDecode(System.String)">
            <summary>
            Decode the given URL encoded string.
            </summary>
            <param name="message">URL encoded string to decode</param>
            <returns>Decoded string</returns>
            <remarks>This method decodes "+" (as well as "%20") into the space character ' '.</remarks>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.ParseKeyValueList(System.String,System.Char,System.Boolean,System.Boolean)">
            <summary>
            Parse a delimited string of key-value pairs in to a dictionary.
            </summary>
            <param name="input">Delimited string of key-value pairs</param>
            <param name="delimiter">Character used as a delimiter between key-value pairs</param>
            <param name="urlDecode">True to perform URL decoding of both the keys and values</param>
            <param name="lowercaseKeys">True to make all resulting keys lower-case</param>
            <returns>Dictionary of string key-value pairs</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.ParseKeyValueListStrict(System.String,System.Char,System.Boolean,System.Boolean)">
            <summary>
            Parse a delimited string of key-value pairs in to a dictionary.
            </summary>
            <param name="input">Delimited string of key-value pairs</param>
            <param name="delimiter">Character used as a delimiter between key-value pairs</param>
            <param name="urlDecode">True to perform URL decoding of both the keys and values</param>
            <param name="lowercaseKeys">True to make all resulting keys lower-case</param>
            <exception cref="T:System.ArgumentException">Thrown if a malformed key-value pair is present in <paramref name="input"/></exception>
            <returns>Dictionary of string key-value pairs</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.ParseKeyValueList(System.String,System.Char,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Parse a delimited string of key-value pairs in to a dictionary.
            </summary>
            <param name="input">Delimited string of key-value pairs</param>
            <param name="delimiter">Character used as a delimiter between key-value pairs</param>
            <param name="urlDecode">True to perform URL decoding of both the keys and values</param>
            <param name="lowercaseKeys">True to make all resulting keys lower-case</param>
            <param name="strict">Throw <see cref="T:System.ArgumentException"/> when the input string contains a malformed key-value pair</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="strict"/> is true and a malformed key-value pair is present in <paramref name="input"/></exception>
            <returns>Dictionary of string key-value pairs</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.ParseKeyValueList(System.String,System.Char,System.Boolean)">
            <summary>
            Parse a delimited string of key-value pairs in to a dictionary.
            </summary>
            <param name="input">Delimited string of key-value pairs</param>
            <param name="delimiter">Character used as a delimiter between key-value pairs</param>
            <param name="urlDecode">True to perform URL decoding of both the keys and values</param>
            <remarks>Keys are forced to lower-cased</remarks>
            <returns>Dictionary of string key-value pairs</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.GenerateStreamFromString(System.String)">
            <summary>
            Create a <see cref="T:System.IO.Stream"/> from the given string.
            </summary>
            <param name="s">String to create a <see cref="T:System.IO.Stream"/> from</param>
            <returns><see cref="T:System.IO.Stream"/> from a string</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.DeserializeResponse``1(System.String)">
            <summary>
            Deserialize the given JSON string in to the specified type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Type to deserialize the JSON as</typeparam>
            <param name="response">JSON string</param>
            <returns>Deserialized type <typeparamref name="T"/></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.Base64Encode(System.String)">
            <summary>
            Base64 encode the given string.
            </summary>
            <param name="input">String to base64 encode</param>
            <returns>Base64 encoded string</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.Base64Decode(System.String)">
            <summary>
            Decode the given base64 encoded string.
            </summary>
            <param name="encodedString">Base64 encoded string</param>
            <returns>Decoded string</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.EncodingHelper.SplitWithQuotes(System.String,System.Char)">
            <summary>
            Split a string into individual elements by the specified delimiter, where
            a delimiter enclosed within double-quotes '"' is considered to be part of the same
            single element.
            </summary>
            <param name="input">Delimited string</param>
            <param name="delimiter">Element delimiter</param>
            <returns>List of elements</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.ExecuteAuthenticationResults">
            <summary>
            Class used to describe the outcome of the execute authentication process.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.MSALHttpClientFactory.GetHttpClient">
            <summary>
            Return the HTTP client for MSAL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.MSALHttpRetryHandlerHelper.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Handel Failure and retry
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.OnPremises_Auth">
            <summary>
            Authentication for Non-OAuth Onprem. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.OnPremises_Auth.CreateAndAuthenticateProxy``1(Microsoft.Xrm.Sdk.Client.IServiceManagement{``0},System.Uri,System.Uri,System.ServiceModel.Description.ClientCredentials,System.String,System.TimeSpan,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Creates and authenticates the Service Proxy for the organization service for OnPremises Dataverse
            </summary>
            <typeparam name="T">Service Management Type</typeparam>
            <param name="servicecfg">Initialized Service Management object or null. </param>
            <param name="ServiceUri">URL to connect too</param>
            <param name="homeRealm">HomeRealm URI</param>
            <param name="userCredentials">User Credentials object</param>
            <param name="LogString">Log Preface string. </param>
            <param name="MaxConnectionTimeout">Max Connection timeout setting. </param>
            <param name="logSink">(optional) Initialized DataverseTraceLogger Object</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.OnPremises_Auth.ClaimsIFDFailOverAuth``1(Microsoft.Xrm.Sdk.Client.IServiceManagement{``0},System.Uri,System.ServiceModel.Description.ClientCredentials,System.Int32,System.Boolean)">
            <summary>
            Handles direct authentication and fall though support to Kerb for Federation environments where configured for fall though
            </summary>
            <typeparam name="T">Type of Service being authenticated</typeparam>
            <param name="servicecfg">Service configuration</param>
            <param name="homeRealm">HomeRelam of the service</param>
            <param name="userCredentials">User Credentials</param>
            <param name="tryNetworkCred">Internal Fall though switch</param>
            <param name="depthLevel">internal call back value</param>
            <returns>AuthenticationCredentials configured or null. </returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior">
            <summary>
            ORGINAL CODE FROM https://github.com/AzureAD/azure-activedirectory-library-for-dotnet/blob/68d7dea3643e075be85abbca1ab88ba614465541/src/Microsoft.IdentityModel.Clients.ActiveDirectory/Features/NonWinCommon/PromptBehavior.cs
            PORTED TO THIS LIB TO ACT AS A BRIDGE BETWEEN ADAL.NET AND MSAL. 
            Indicates whether AcquireToken should automatically prompt only if necessary or whether
            it should prompt regardless of whether there is a cached token.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior.Auto">
            <summary>
            Acquire token will prompt the user for credentials only when necessary.  If a token
            that meets the requirements is already cached then the user will not be prompted.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior.Always">
            <summary>
            The user will be prompted for credentials even if there is a token that meets the requirements
            already in the cache.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior.RefreshSession">
            <summary>
            Re-authorizes (through displaying webview) the resource usage, making sure that the resulting access
            token contains updated claims. If user logon cookies are available, the user will not be asked for 
            credentials again and the logon dialog will dismiss automatically.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior.SelectAccount">
            <summary>
            Prompt the user to select a user account even if there is a token that meets the requirements
            already in the cache. This enables an user who has multiple accounts at the Authorization Server to select amongst 
            the multiple accounts that they might have current sessions for. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior.Never">
            <summary>
            Never Prompt 
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.FileBackedTokenCache">
            <summary>
            File backed storage of MSAL tokens for Public Client only.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.FileBackedTokenCache.Initialize(Microsoft.Identity.Client.ITokenCache)">
            <summary>
            Initialize and configure the file token cache
            </summary>
            <param name="tokenCache"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.FileBackedTokenCacheHints.#ctor(System.String)">
            <summary>
            Setup File Backed Token Storage with token path.
            </summary>
            <param name="tokenPathAndFileName"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache">
            <summary>
            DV Client On-board memory cache system for tokens.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache._memoryCache">
            <summary>
            .NET Core Memory cache.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache._tokenCacheOptions">
            <summary>
            MSAL memory token cache options.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache.#ctor(Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryTokenCacheOptions)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache.Initialize(Microsoft.Identity.Client.ITokenCache)">
            <summary>
            Initializes the token cache serialization.
            </summary>
            <param name="tokenCache">Token cache to serialize/deserialize.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache.ClearCache">
            <summary>
            Clean up token cache.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache.RemoveKeyAsync(System.String)">
            <summary>
            Removes a token cache identified by its key, from the serialization
            cache.
            </summary>
            <param name="cacheKey">token cache key.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when key removal has completed.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache.ReadCacheBytesAsync(System.String)">
            <summary>
            Reads a blob from the serialization cache (identified by its key).
            </summary>
            <param name="cacheKey">Token cache key.</param>
            <returns>Read Bytes.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryBackedTokenCache.WriteCacheBytesAsync(System.String,System.Byte[],Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryCacheSerializerHints)">
            <summary>
            Writes a token cache blob to the serialization cache (identified by its key).
            </summary>
            <param name="cacheKey">Token cache key.</param>
            <param name="bytes">Bytes to write.</param>
            <param name="cacheSerializerHints">Hints for the cache serialization implementation optimization.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when a write operation has completed.</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryCacheSerializerHints">
            <summary>
            Set of properties that the token cache serialization implementations might use to optimize the cache.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryCacheSerializerHints.CancellationToken">
            <summary>
            CancellationToken enabling cooperative cancellation between threads, thread pool, or Task objects.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryCacheSerializerHints.SuggestedCacheExpiry">
            <summary>
            Suggested cache expiry based on the in-coming token. Use to optimize cache eviction
            with the app token cache.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryTokenCacheOptions.#ctor">
            By default, the sliding expiration is set for 14 days
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Auth.TokenCache.MemoryTokenCacheOptions.AbsoluteExpirationRelativeToNow">
            <summary>
            Gets or sets the value of the duration after which the cache entry will expire unless it's used
            This is the duration the tokens are kept in memory cache.
            In production, a higher value, up-to 90 days is recommended.
            </summary>
            <value>
            The AbsoluteExpirationRelativeToNow value.
            </value>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.BatchManager">
            <summary>
            This class manages batches for Dataverse execute Multiple. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.RequestBatches">
            <summary>
            Collection of Batches in use. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.MaxNumberOfBatches">
            <summary>
            Max number of concurrent batches allowed. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.MaxNumberOfRequestsInABatch">
            <summary>
            Max number of requests per batch allowed. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.logger">
            <summary>
            Local Log file. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.#ctor(Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Int32,System.Int32)">
            <summary>
            Base Constructor..
            </summary>
            <param name="MaxBatches">Max number of concurrent batches possible</param>
            <param name="MaxRequestPerBatch">Max number of requests per Batch</param>
            <param name="traceLogger">TraceLogger</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.CreateNewBatch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a new Batch to the Queue
            </summary>
            <param name="name">Name of the batch</param>
            <param name="returnResults">Should the Batch Return results. </param>
            <param name="continueOnError">Should the Batch Continue on Error. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.GetRequestBatchById(System.Guid)">
            <summary>
            Returns the request batch by ID,
            </summary>
            <param name="batchId">ID of the batch to return</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.GetRequestBatchByName(System.String)">
            <summary>
            Returns a request batch by name. 
            </summary>
            <param name="batchName">Name of the Batch. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.AddNewRequestToBatch(System.Guid,Microsoft.Xrm.Sdk.OrganizationRequest,System.String)">
            <summary>
            Add an item to batch. 
            </summary>
            <param name="batchId">ID of the batch</param>
            <param name="request">Organization Service Request to add to the batch</param>
            <param name="debugMsg">debug messages to associate to the batch</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.BatchManager.RemoveBatch(System.Guid)">
            <summary>
            Removes and releases the batch by ID. 
            </summary>
            <param name="batchId"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch">
            <summary>
            Container class for Batches. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.BatchId">
            <summary>
            ID of the batch. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.BatchName">
            <summary>
            DisplayName of the batch. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.BatchRequestSettings">
            <summary>
            Settings for this Execute Multiple Request. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.BatchItems">
            <summary>
            Items to execute
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.BatchResults">
            <summary>
            Results from the Batch. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.Status">
            <summary>
            Status of the batch. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.RequestBatch.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="returnResponses">True to return responses, False to not return responses</param>
            <param name="continueOnError">True to continue if anyone item trips an error, False to stop on the first error. </param>
            <param name="batchName">String name of the batch, if blank, a GUID is used</param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.BatchItemOrganizationRequest">
            <summary>
            Request object. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.BatchItemOrganizationRequest.Request">
            <summary>
            Organization Service request for the batch
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.BatchItemOrganizationRequest.RequestReferenceNumber">
            <summary>
            Reference Correlation ID
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.BatchItemOrganizationRequest.RequestDebugMessage">
            <summary>
            Request debug Message. 
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.BatchStatus">
            <summary>
            Status of the batch. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchStatus.Waiting">
            <summary>
            Batch is waiting to be run
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchStatus.Running">
            <summary>
            Batch is currently executing
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.BatchStatus.Complete">
            <summary>
            Batch has completed. 
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType">
            <summary>
             Decision switch for the sort of Auth to login to Dataverse with
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType.AD">
            <summary>
            Active Directory Auth
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType.OAuth">
            <summary>
            OAuth based Auth
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType.Certificate">
            <summary>
            Certificate based Auth
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType.ClientSecret">
            <summary>
            Client Id + Secret Auth type.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType.ExternalTokenManagement">
            <summary>
            Enabled Host to manage Auth token for Dataverse connections.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType.InvalidConnection">
            <summary>
            Invalid connection
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService">
            <summary>
            Handles login and setup the connections for Dataverse
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._ActualDataverseOrgUri">
            <summary>
            This is the actual Dataverse OrgURI used to connect, which could be influenced by the host name given during the connect process.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._tokenOffSetTimeSpan">
            <summary>
            TimeSpan used to control the offset of the token reacquire behavior for none user Auth flows.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.unqueInstance">
            <summary>
            if Set to true then the connection is for one use and should be cleand out of cache when completed.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._clientId">
            <summary>
            Client or App Id to use.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._redirectUri">
            <summary>
            uri specifying the redirection uri post OAuth auth
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._resource">
            <summary>
            Resource to connect to
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._authority">
            <summary>
            cached authority reading from credential manager
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._certificateOfConnection">
            <summary>
            when certificate Auth is used,  this is the certificate that is used to execute the connection.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._certificateThumbprint">
            <summary>
            ThumbPrint of the Certificate to use.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._certificateStoreLocation">
            <summary>
            Location where the certificate identified by the Certificate thumb print can be found.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._targetInstanceUriToConnectTo">
            <summary>
            Uri that will be used to connect to Dataverse for Cert Auth.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.SoapOrgUriFormat">
            <summary>
            format string for building the org connect URI
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._baseSoapOrgUriFormat">
            <summary>
            format string for Global discovery for SOAP API
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.WebApiUriFormat">
            <summary>
            format string for building the WebAPI connect URI
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._baseWebApiUriFormat">
            <summary>
            format string for Global discovery WebAPI
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._baselineGlobalDiscoveryFormater">
            <summary>
            Provides the base format for creating GD URL's
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._commercialGlobalDiscoBaseWebAPIUriFormat">
            <summary>
            format string for the global discovery service
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._globlaDiscoVersion">
            <summary>
            version of the global discovery service.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._OrganizationId">
            <summary>
            organization id placeholder.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._MaxConnectionTimeout">
            <summary>
            Max connection timeout property
            https://docs.microsoft.com/en-us/azure/app-service/faq-availability-performance-application-issues#why-does-my-request-time-out-after-230-seconds
            Azure Load Balancer has a default idle timeout setting of four minutes. This is generally a reasonable response time limit for a web request.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._TenantId">
            <summary>
            Tenant ID
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._EnvironmentId">
            <summary>
            Connected Environment Id
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._testSupportIOrg">
            <summary>
            TestHelper for Testing sim.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._retryPauseTimeRunning">
            <summary>
            Value used by the retry system while the code is running,
            this value can scale up and down based on throttling limits.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._knownTypesFactory">
            <summary>
            Known types factory
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._MsalAuthClient">
            ************** MSAL Properties ****************
            <summary>
            MSAL Object, Can be either a PublicClient or a Confidential Client, depending on Context.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._authenticationResultContainer">
            <summary>
            This is carries the result of the token authentication flow to optimize token retrieval.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._userAccount">
            <summary>
            Selected user located as a result, used to optimize token acquire on second round.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.lockObject">
            <summary>
            Lock object used to control access to the acquire token flows when in clone mode.
            MSAL does not appear to be threadsafe when multiple threads attempt to access the same MSAL object.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService._memoryBackedTokenCache">
            <summary>
            MemoryBacked Token cache object.
            Used for Confidential clients primarily.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.LocalMemoryCache">
            <summary>
            Memory cache for current instance.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.IsAClone">
            <summary>
            When true, indicates the construction is coming from a clone process.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.CallerAADObjectId">
            <summary>
            AAD Object ID of caller.  Valid in XRM 8.1 + only.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.WebApiHttpClient">
            <summary>
            httpclient that is in use for this connection
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.SessionTrackingId">
            <summary>
            This ID is used to support Dataverse Telemetry when trouble shooting SDK based errors.
            When Set by the caller, all Dataverse API Actions executed by this client will be tracked under a single session id for later troubleshooting.
            For example, you are able to group all actions in a given run of your client ( several creates / reads and such ) under a given tracking id that is shared on all requests.
            providing this ID when reporting a problem will aid in trouble shooting your issue.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ForceServerCacheConsistency">
            <summary>
            This will force the server to refresh the current metadata cache with current DB config.
            Note, that this is a performance impacting event. Use of this flag will slow down operations server side as the server is required to check for consistency on each API call executed.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GlobalDiscoveryAllInstancesUri">
            <summary>
            returns the URL to global discovery for querying all instances.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GlobalDiscoveryInstanceUriFormat">
            <summary>
            Format string for calling global disco for a specific instance.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ServiceCACHEName">
            <summary>
            Service CacheName
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.Authority">
            <summary>
            Cached Authority
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.AuthContext">
            <summary>
             AAD authentication context
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.UserId">
            <summary>
            Cached userid
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.CalledbyExecuteRequest">
            <summary>
            Flag indicating that the an request called by Execute_Command used for OAuth
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.logEntry">
            <summary>
            Logging provider for DataverseConnectionServiceobject.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GetAllLogs">
            <summary>
            Returns Logs from this process.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.isLogEntryCreatedLocaly">
            <summary>
            if set to true, the log provider is set locally
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DataverseServiceAccessCredential">
            <summary>
            Get and Set of network credentials...
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.InternetProtocalToUse">
            <summary>
            Type of protocol to use
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ConnectedOrganizationDetail">
            <summary>
            returns the connected organization detail object.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.AuthenticationTypeInUse">
             <summary>
            
             </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.WebClient">
            <summary>
            Returns the Dataverse Web Client
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.OnPremClient">
            <summary>
            Returns the Dataverse Client for OnPrem. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.CustomerOrganization">
            <summary>
            Get / Set the Dataverse Organization that the customer exists in
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.HostPort">
            <summary>
            Gets / Set the Dataverse Host Port that the web service is listening on
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.HostName">
            <summary>
            Gets / Set the Dataverse Hostname that the web service is listening on.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.CurrentUser">
            <summary>
            Returns the Current Dataverse User.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ConnectOrgUriActual">
            <summary>
            Returns the Actual URI used to connect to Dataverse.
            this URI could be influenced by user defined variables.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ConnectODataBaseUriActual">
            <summary>
            base URL for the oData WebAPI
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.UseExternalConnection">
            <summary>
            Flag indicating that the an External connection to Dataverse is used to connect.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ConnectedOrgFriendlyName">
            <summary>
            Returns the friendly name of the connected org.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ConnectedOrgPublishedEndpoints">
            <summary>
            Returns the endpoint collection for the connected org.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.OrganizationVersion">
            <summary>
            Version Number of the organization, if null Discovery service process was not run or the value returned was unreadable.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.OrganizationId">
            <summary>
            Organization ID of connected org.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.TenantId">
            <summary>
            Gets or sets the TenantId
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.EnvironmentId">
            <summary>
            Gets or sets the Environment Id.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GetAccessTokenAsync">
            <summary>
            Function to call to get access token for the current operation.
            Set based on constructor call and is specific to the instance of the Client that was created.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.RequestAdditionalHeadersAsync">
            <summary>
            Function to call to get the current headers for this request
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.BaseWebAPIDataFormat">
            <summary>
            returns the format string for the baseWebAPI
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.MaxConnectionTimeout">
            <summary>
            Gets or Sets the Max Connection timeout for the connection to Dataverse/XRM
            default is 2min.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.EnableCookieRelay">
            <summary>
            Gets or sets the value to enabled cookie relay on this connection.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.CurrentCookieCollection">
            <summary>
            Cookies that are being passed though clients, when cookies are used
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.RecommendedDegreesOfParallelism">
            <summary>
            Server Hint for the number of concurrent threads that would provide optimal processing. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.#ctor(Microsoft.Xrm.Sdk.IOrganizationService,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            TEST Support Constructor.
            </summary>
            <param name="testIOrganziationSvc"></param>
            <param name="baseConnectUrl"></param>
            <param name="mockClient"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.#ctor(Microsoft.PowerPlatform.Dataverse.Client.Connector.OrganizationWebProxyClientAsync,Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Sets up an initialized the Dataverse Service interface.
            </summary>
            <param name="externalOrgWebProxyClient">This is an initialized organization web Service proxy</param>
            <param name="authType">Authentication Type to use</param>
            <param name="logSink">incoming Log Sink</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.#ctor(Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType,System.String,System.String,System.String,System.Net.NetworkCredential,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Uri)">
            <summary>
            Sets up a Connection to Dataverse OnPremsie 
            </summary>
            <param name="authType">Type of Authentication to use, AD or IDF  </param>
            <param name="hostName">Host name to connect too</param>
            <param name="port">Port Number to Connect too</param>
            <param name="orgName">Organization to Connect to</param>
            <param name="providedCredential">Credential to use to connect</param>
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the Dataverse Cache Objects.</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Dataverse Discovery Server service. not required.</param>
            <param name="logSink">incoming LogSink</param>
            <param name="instanceToConnectToo">instance to connect too</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.#ctor(Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType,System.String,System.String,System.Security.SecureString,System.String,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.String,System.String,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Uri,System.Boolean,System.String)">
            <summary>
            Sets up and initializes the Dataverse Service interface using OAuth for user flows.
            </summary>
            <param name="authType">Only OAuth User flows are supported in this constructor</param>
            <param name="orgName">Organization to Connect too</param>
            <param name="livePass">Live Password to use</param>
            <param name="liveUserId">Live ID to use</param>
            <param name="onlineRegion">OnlineRegion</param>
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the connection Cache Objects.</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Discovery Server service. not required.</param>
            <param name="clientId">Client Id of the registered application.</param>
            <param name="redirectUri">RedirectUri for the application redirecting to</param>
            <param name="promptBehavior">Whether to prompt when no username/password</param>
            <param name="hostName">Hostname to connect to</param>
            <param name="port">Port to connect to</param>
            <param name="onPrem">Token Cache Path supplied for storing OAuth tokens</param>
            <param name="logSink">Incoming Log Provide</param>
            <param name="instanceToConnectToo">Targeted Instance to connector too.</param>
            <param name="useDefaultCreds">(optional) If true attempts login using current user ( Online ) </param>
            <param name="tokenCacheStorePath">(optional) if provided sets the path to write the token cache too.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.#ctor(Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType,System.Uri,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,System.String,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.String)">
            <summary>
            Sets up and initializes the Dataverse Service interface using Certificate Auth.
            </summary>
            <param name="authType">Only Certificate flows are supported in this constructor</param>
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the Cache Objects.</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Discovery Server service. not required.</param>
            <param name="clientId">Client Id of the registered application.</param>
            <param name="redirectUri">RedirectUri for the application redirecting to</param>
            <param name="hostName">Hostname to connect to</param>
            <param name="port">Port to connect to</param>
            <param name="onPrem">Modifies system behavior for ADAL based auth for OnPrem</param>
            <param name="certStoreName">StoreName on this machine where the certificate with the thumb print passed can be located</param>
            <param name="certifcate">X509Certificate to be used to login to this connection, if populated, Thumb print and StoreLocation are ignored. </param>
            <param name="certThumbprint">Thumb print of the Certificate to use for this connection.</param>
            <param name="instanceToConnectToo">Direct Instance Uri to Connect To</param>
            <param name="logSink">Incoming Log Sink data</param>
            <param name="tokenCacheStorePath">(optional) if provided, sets the path to store or read user tokens</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DoLogin(Microsoft.PowerPlatform.Dataverse.Client.ConnectionService@)">
            <summary>
            Loges into Dataverse using the supplied parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GenerateCacheKeys(System.Boolean)">
            <summary>
            This is to deal with 2 instances of the ConnectionService being created in the Same Running Instance that would need to connect to different Dataverse servers.
            </summary>
            <param name="useUniqueCacheName"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.IntilizeService(Microsoft.PowerPlatform.Dataverse.Client.ConnectionService@)">
            <summary>
            Initializes the Dataverse Service
            </summary>
            <returns>Return true on Success, false on failure</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GetCachedService(Microsoft.PowerPlatform.Dataverse.Client.ConnectionService@)">
            <summary>
            Try's to gets the Cached Dataverse Service from memory.
            on Failure, Initialize a New instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.InitServiceAsync">
            <summary>
            Initialize a Connection to Dataverse
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DoDirectLoginAsync(System.Boolean)">
            <summary>
            Executes a direct login using the current configuration.
            </summary>
            <param name="IsOnPrem">if set indicates an onPrem Authentication</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.RefreshInstanceDetails(Microsoft.Xrm.Sdk.IOrganizationService,System.Uri)">
            <summary>
            Refresh the organization instance details.
            </summary>
            <param name="dvService">ConnectionSvc</param>
            <param name="uriOfInstance">Instance URL</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GetWhoAmIDetails(Microsoft.Xrm.Sdk.IOrganizationService,System.Guid)">
            <summary>
            Get current user info.
            </summary>
            <param name="trackingID"></param>
            <param name="dvService"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.SetClonedProperties(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient)">
            <summary>
            Sets Properties on the cloned instance.
            </summary>
            <param name="sourceClient">Source instance to clone from</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.Command_WebExecuteAsync(System.String,System.String,System.Net.Http.HttpMethod,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String,System.String,System.Guid,System.Boolean,System.Int32,System.TimeSpan,System.Uri,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Makes a web request to the connected XRM instance.
            </summary>
            <param name="queryString">Here you would pass the path and query parameters that you wish to pass onto the WebAPI.
            The format used here is as follows:
              {APIURI}/api/data/v{instance version}/querystring.
            For example,
                if you wanted to get data back from an account,  you would pass the following:
                    accounts(id)
                    which creates:  get - https://myinstance.crm.dynamics.com/api/data/v9.0/accounts(id)
                if you were creating an account, you would pass the following:
                    accounts
                    which creates:  post - https://myinstance.crm.dynamics.com/api/data/v9.0/accounts - body contains the data.
                    </param>
            <param name="method">Http Method you want to pass.</param>
            <param name="body">Content your passing to the request</param>
            <param name="customHeaders">Headers in addition to the default headers added by for Executing a web request</param>
            <param name="errorStringCheck"></param>
            <param name="contentType">Content Type to pass in if executing a post request</param>
            <param name="callerId">current caller ID</param>
            <param name="disableConnectionLocking">disable connection locking</param>
            <param name="maxRetryCount">max retry count</param>
            <param name="retryPauseTime">retry pause time</param>
            <param name="uriOfInstance">uri of instance</param>
            <param name="requestTrackingId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ShouldRetryWebAPI(System.Exception,System.Int32,System.Int32,System.TimeSpan,System.Boolean@)">
            <summary>
            retry request or not
            </summary>
            <param name="ex">exception</param>
            <param name="retryCount">retry count</param>
            <param name="maxRetryCount">max retry count</param>
            <param name="retryPauseTime">retry pause time</param>
            <param name="isThrottlingRetry">when true, indicates that the retry was caused by a throttle tripping.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ExecuteHttpRequestAsync(System.String,System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Net.Http.HttpClient)">
            <summary>
            Makes a call to a web API to support request to XRM.
            </summary>
            <param name="uri">URI of request target</param>
            <param name="method">method being used</param>
            <param name="body">body of request</param>
            <param name="customHeaders">Headers applied to request</param>
            <param name="cancellationToken">Cancellation token if required</param>
            <param name="logSink">Log Sink if being called externally.</param>
            <param name="requestTrackingId">ID of the request if set by an external caller</param>
            <param name="contentType">content type to use when calling into the remote host</param>
            <param name="sessionTrackingId">Session Tracking ID to assoicate with the request.</param>
            <param name="providedHttpClient"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DiscoverOrganizationsAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Boolean,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Discovers the organizations (OAuth Specific)
            </summary>
            <param name="discoveryServiceUri">The discovery service uri.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="clientId">The client id of registered Azure app.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior for ADAL library.</param>
            <param name="isOnPrem">Determines whether onprem or </param>
            <param name="authority">The authority identifying the registered tenant</param>
            <param name="logSink">(optional) Initialized CdsTraceLogger Object</param>
            <param name="useGlobalDisco">Use the global disco path. </param>
            <param name="useDefaultCreds">(optional) If true attempts login using current user</param>
            <param name="externalLogger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <returns>The list of organizations discovered.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DiscoverOrganizationsAsync(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean,System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Boolean,System.String)">
            <summary>
            Discovers the organizations (OAuth Specific)
            </summary>
            <param name="discoveryServiceUri">The discovery service uri.</param>
            <param name="loginCertificate">The certificate to use to login</param>
            <param name="clientId">The client id of registered Azure app.</param>
            <param name="isOnPrem">Determines whether onprem or </param>
            <param name="authority">The authority identifying the registered tenant</param>
            <param name="logSink">(optional) Initialized CdsTraceLogger Object</param>
            <param name="useDefaultCreds">(optional) If true, attempts login with current user.</param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <returns>The list of organizations discovered.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DiscoverGlobalOrganizationsAsync(System.Uri,System.Func{System.String,System.Threading.Tasks.Task{System.String}},Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Async Global Disco Query endpoint.. works with the external token provider flow for UserID flows
            </summary>
            <param name="discoveryServiceUri">GD URI</param>
            <param name="tokenProviderFunction">Pointer to the token provider handler</param>
            <param name="logSink">Logging endpoint (optional)</param>
            <param name="externalLogger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <returns>Populated OrganizationDetailCollection or Null.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DiscoverOrganizations_InternalAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,System.Boolean,System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Discovers the organizations (OAuth Specific)
            </summary>
            <param name="discoveryServiceUri">The discovery service uri.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="loginCertificate">The Certificate used to login</param>
            <param name="clientId">The client id of registered Azure app.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior for ADAL library.</param>
            <param name="isOnPrem">Determines whether onprem or </param>
            <param name="authority">The authority identifying the registered tenant</param>
            <param name="logSink">(optional) Initialized CdsTraceLogger Object</param>
            <param name="useDefaultCreds">(optional) If true, tries to login with current users credentials</param>
            <param name="tokenCacheStorePath">(optional) token filePath, if set to empty string, the default path is used</param>
            <returns>The list of organizations discovered.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DiscoverGlobalOrganizationsAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Boolean,System.Boolean,System.String)">
            <summary>
            Discovers the organizations (OAuth Specific)
            </summary>
            <param name="discoveryServiceUri">The discovery service uri.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="loginCertificate">The Certificate used to login</param>
            <param name="clientId">The client id of registered Azure app.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior for ADAL library.</param>
            <param name="isOnPrem">Determines whether onprem or </param>
            <param name="authority">The authority identifying the registered tenant</param>
            <param name="logSink">(optional) Initialized CdsTraceLogger Object</param>
            <param name="useGlobalDisco">(optional) utilize Global discovery service</param>
            <param name="useDefaultCreds">(optional) if true, attempts login with the current users credentials</param>
            <param name="tokenCacheStorePath">(optional) token filePath, if set to empty string, the default path is used</param>
            <returns>The list of organizations discovered.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.QueryGlobalDiscoveryAsync(System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Queries the global discovery service
            </summary>
            <param name="authToken"></param>
            <param name="discoveryServiceUri"></param>
            <param name="logSink"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GetErrorCode(System.Xml.XmlNode)">
            <summary>
            Returns the error code that is contained in SoapException.Detail.
            </summary>
            <param name="errorInfo">An XmlNode that contains application specific error information.</param>
            <returns>Error code text or empty string.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.GetClientCredentials(System.Net.NetworkCredential)">
            <summary>
            Gets the client credentials.
            </summary>
            <param name="networkCredential">The network credential.</param>
            <returns>The client credentials object.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.FindCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreName,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Attempts to get the certificate for the thumbprint passed in
            </summary>
            <param name="certificateThumbprint">Thumbprint of Certificate to Load</param>
            <param name="storeName">Name of the store to look for the certificate in.</param>
            <param name="logSink">(optional) Initialized CdsTraceLogger Object</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.TryFindCertificatesInStore(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509Certificate2Collection@)">
            <summary>
            Used to locate the certificate in the store and return a collection of certificates that match the thumbprint.
            </summary>
            <param name="certificateThumbprint">Thumbprint to search for</param>
            <param name="location">Where to search for on the machine</param>
            <param name="certReproName">Where in the store to look for the certificate</param>
            <param name="certificates">collection of certificates found</param>
            <returns>True if found, False if not.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ConnectAndInitServiceAsync(Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.Boolean,System.Uri)">
            <summary>
            Connects too and initializes the Dataverse org Data service.
            </summary>
            <param name="orgdata">Organization Data</param>
            <param name="IsOnPrem">True if called from the OnPrem Branch</param>
            <param name="homeRealmUri"> URI of the users Home Realm or null</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.AttachWebProxyHander(Microsoft.PowerPlatform.Dataverse.Client.Connector.OrganizationWebProxyClientAsync)">
            <summary>
            This method us used to wire up the telemetry behaviors to the webProxy connection
            </summary>
            <param name="proxy">Connection proxy to attach telemetry too</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.AttachProxyHander(Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceProxyAsync)">
            <summary>
            This method us used to wire up the telemetry behaviors to the onPrem connection
            </summary>
            <param name="proxy">Connection proxy to attach telemetry too</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.WebProxyChannelFactory_Opening(System.Object,System.EventArgs)">
            <summary>
            Grab the Channel factory Open event and add the Telemetry behaviors.
            </summary>
            <param name="sender">incoming ChannelFactory</param>
            <param name="e">ignored</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.DecodeFrom64(System.String)">
            <summary>
            To Decode the string
            </summary>
            <param name="encodedData"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.BuildOrgConnectUri(Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Builds the Organization Service Connect URI
            - This is done, potentially replacing the original string, to deal with the discovery service returning an unusable string, for example, a DNS name that does not resolve.
            </summary>
            <param name="orgdata">Org Data found from the Discovery Service.</param>
            <returns>Connection URI</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.FindDiscoveryServerAsync(Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers)">
            <summary>
            Iterates through the list of Dataverse Discovery Servers to find one that knows the user.
            </summary>
            <param name="onlineServerList"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.QueryOnlineServersListAsync(System.Collections.ObjectModel.ObservableCollection{Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer},Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList,System.Uri,System.Uri)">
            <summary>
            Iterate over the discovery servers available.
            </summary>
            <param name="svrs"></param>
            <param name="orgsList"></param>
            <param name="trimToDiscoveryUri">Forces the results to be trimmed to this region when present</param>
            <param name="globalDiscoUriToUse">Overriding Global Discovery URI</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.QueryLiveDiscoveryServerAsync(System.Uri,System.Boolean)">
            <summary>
            Query an individual Live System
            </summary>
            <param name="discoServer"></param>
            <param name="useGlobal">when try, uses global discovery</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.AddOrgToOrgList(Microsoft.Xrm.Sdk.Discovery.OrganizationDetailCollection,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList@)">
            <summary>
            Adds an Org to the List of Orgs
            </summary>
            <param name="discoveryServer"></param>
            <param name="discoveryServerUri"></param>
            <param name="organizationDetailList"></param>
            <param name="orgList"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.AddOrgToOrgList(Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList@)">
            <summary>
            Adds an Org to the List of Orgs
            </summary>
            <param name="organizationDetail"></param>
            <param name="discoveryServer"></param>
            <param name="orgList"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.RefreshClientTokenAsync">
            <summary>
            Refresh web proxy client token
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ConnectionService.ResetDisposedState">
            <summary>
            Reset disposed state to handle this object being pulled from cache.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceConfigurationAsync.EnableProxyTypes">
            <summary>
            This method will enable support for the default strong proxy types. 
            
            If you are using a shared Service Configuration instance, you must be careful if using 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceConfigurationAsync.EnableProxyTypes(System.Reflection.Assembly)">
            <summary>
            This method will enable support for the strong proxy types exposed in the passed assembly.
            <param name="assembly">The assembly that will provide support for the desired strong types in the proxy.</param>
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceProxyAsync">
            <summary>
            helper class that manages a ChannelFactory and serves up channels for sdk client use
            <remarks>For internal use only</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceProxyAsync.EnableProxyTypes">
            <summary>
            This method will enable support for the default strong proxy types. 
            
            If you are using a shared Service Configuration instance, you must be careful if using 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceProxyAsync.EnableProxyTypes(System.Reflection.Assembly)">
            <summary>
            This method will enable support for the strong proxy types exposed in the passed assembly.
            <param name="assembly">The assembly that will provide support for the desired strong types in the proxy.</param>
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceProxyAsync.GetXrmSdkAssemblyFileVersion">
            <summary>
            Get's the file version of the Xrm Sdk assembly that is loaded in the current client domain.
            For Sdk clients called via the OrganizationServiceProxy this is the version of the local Microsoft.Xrm.Sdk dll used by the Client App.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.OrganizationServiceProxyContextAsyncInitializer">
            <summary>
            Manages context for sdk calls
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ManagedTokenOrganizationServiceProxy">
            <summary>
            Extension to the Organization Service Proxy to allow for management of reAuthentication
            Base class borrowed from the Plugin Registration tool, and modified for this class.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ManagedTokenOrganizationServiceProxy.#ctor(Microsoft.Xrm.Sdk.Client.IServiceManagement{Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync},System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Support for AD
            </summary>
            <param name="serviceManagement"></param>
            <param name="clientCredentials"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ManagedTokenOrganizationServiceProxy.#ctor(Microsoft.Xrm.Sdk.Client.IServiceManagement{Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync},Microsoft.Xrm.Sdk.Client.SecurityTokenResponse,System.ServiceModel.Description.ClientCredentials)">
            <summary>
             Support for things other then AD.
            </summary>
            <param name="serviceManagement"></param>
            <param name="securityTokenResponse"></param>
            <param name="clientCredentials"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ManagedTokenOrganizationServiceProxy.AuthenticateCore">
            <summary>
            Overrides the Authentication core process in the SDK Proxy..
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ManagedTokenOrganizationServiceProxy.ValidateAuthentication">
            <summary>
            Determines if a ReAuthentication is required for this call.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticateOnlineFederationInternal(Microsoft.Xrm.Sdk.Client.AuthenticationCredentials)">
            <summary>
            Supported matrix:
            1.  Security Token Response populated: We will submit the token to Org ID to exchange for a CRM token.
            2.  Credentials passed.  
            		a.  The UserPrincipalName MUST be populated if the Username/Windows username is empty AND the Home Realm Uri is null.
            		a.  If the Home Realm 
            </summary>
            <param name="authenticationCredentials"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticateFederatedTokenWithOrgIdForCRM(Microsoft.Xrm.Sdk.Client.AuthenticationCredentials)">
            <summary>
            Authenticates a federated token with OrgID to retrieve a token for CRM
            </summary>
            <param name="authenticationCredentials"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticateWithADFSForOrgId(Microsoft.Xrm.Sdk.Client.AuthenticationCredentials,System.Uri)">
            <summary>
            Authenticates with ADFS to retrieve a federated token to exchange with OrgId for CRM
            </summary>
            <param name="authenticationCredentials"></param>
            <param name="identifier"></param>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.ClaimsEnabledService">
            <summary>
            Returns true if the AuthenticationType == Federation or LiveFederation
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.SetAuthenticationConfiguration">
            <summary>
            If there is no binding, there is nothing to do.  Otherwise, import the XRM Policy elements and set the issuers if claims.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.CurrentServiceEndpoint">
            <summary>
            This defaults to the first avaialble endpoint in the ServiceEndpoints dictionary if it has not been set.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.CurrentIssuer">
            <summary>
            If there is a CurrentServiceEndpoint and the Service has been configured for claims (Federation,) then this
            is the endpoint used by the Secure Token Service (STS) to issue the trusted token.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticationType">
            <summary>
            Identifies whether the constructed service is using Claims (Federation) authentication or legacy AD/RPS.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.ServiceEndpoints">
            <summary>
            Contains the list of urls and binding information required in order to make a call to a WCF service.  If the service is configured
            for On-Premise use only, then the endpoint(s) contained within will NOT require the use of an Issuer Endpoint on the binding.
            
            If the service is configured to use Claims (Federation,) then the binding on the service endpoint MUST be configured to use
            the appropriate Issuer Endpoint, i.e., UserNamePassword, Kerberos, etc.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.IssuerEndpoints">
            <summary>
            The following property contains the urls and binding information required to use a configured Secure Token Service (STS)
            for issuing a trusted token that the service endpoint will trust for authentication.
            
            The available endpoints can vary, depending on how the administrator of the STS has configured the server, but may include 
            the following authentication methods:
            
            1.  UserName and Password
            2.  Kerberos
            3.  Certificate
            4.  Asymmetric Token
            5.  Symmetric Token
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.CrossRealmIssuerEndpoints">
            <summary>
            Contains the STS IssuerEndpoints as determined dynamically by calls to AuthenticateCrossRealm.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticateCrossRealm(System.ServiceModel.Description.ClientCredentials,System.String,System.Uri)">
            <summary>
            Authenticates based on the client credentials passed in.
            </summary>
            <param name="clientCredentials">The standard ClientCredentials</param>
            <param name="appliesTo"></param>
            <param name="crossRealmSts"></param>
            <returns>RequestSecurityTokenResponse</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticateCrossRealm(System.IdentityModel.Tokens.SecurityToken,System.String,System.Uri)">
            <summary>
            Authenticates based on the security token passed in.
            </summary>
            <param name="securityToken"></param>
            <param name="appliesTo"></param>
            <param name="crossRealmSts"></param>
            <returns>RequestSecurityTokenResponse</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Authenticate(System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Authenticates based on the client credentials passed in.
            </summary>
            <param name="clientCredentials">The standard ClientCredentials</param>
            <returns>RequestSecurityTokenResponse</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Authenticate(System.ServiceModel.Description.ClientCredentials,System.Uri,System.String)">
            <summary>
            Authenticates based on the client credentials passed in.
            </summary>
            <param name="clientCredentials"></param>
            <param name="uri"></param>
            <param name="keyType">Optional.  Can be set to Bearer if bearer token required</param>
            <returns>RequestSecurityTokenResponse</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Authenticate(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Authenticates based on the security token passed in.
            </summary>
            <param name="securityToken"></param>
            <returns>RequestSecurityTokenResponse</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Authenticate(System.IdentityModel.Tokens.SecurityToken,System.Uri,System.String)">
            <summary>
            Authenticates based on the security token passed in.
            </summary>
            <param name="securityToken"></param>
            <param name="uri"></param>
            <param name="keyType">Optional.  Can be set to Bearer if bearer token required</param>
            <returns>RequestSecurityTokenResponse</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.AuthenticateDevice(System.ServiceModel.Description.ClientCredentials)">
            <summary>
            This will default to LiveID auth when on-line.
            </summary>
            <param name="clientCredentials"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Authenticate(System.ServiceModel.Description.ClientCredentials,Microsoft.Xrm.Sdk.Client.SecurityTokenResponse)">
            <summary>
            This will default to LiveID auth when on-line.
            </summary>
            <param name="clientCredentials"></param>
            <param name="deviceTokenResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Authenticate(System.ServiceModel.Description.ClientCredentials,Microsoft.Xrm.Sdk.Client.SecurityTokenResponse,System.String)">
            <summary>
            This will default to LiveID auth when on-line.
            </summary>
            <param name="clientCredentials"></param>
            <param name="deviceTokenResponse"></param>
            <param name="keyType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceConfiguration`1.Issue(Microsoft.Xrm.Sdk.Client.AuthenticationCredentials)">
            <summary>
            This is the method that actually creates the trust channel factory and issues the request for the token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceContextInitializer`1.#ctor(Microsoft.Xrm.Sdk.Client.ServiceProxy{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceContextInitializer`1"/> class.
            Constructs a context initializer
            </summary>
            <param name="proxy">sdk proxy</param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceMetadataUtility">
            <summary>
            	Handles retrieving/making use of service metadata information.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.OnPremises.ServiceMetadataUtility.AddSecurityBindingToPolicyImporter(System.ServiceModel.Description.WsdlImporter)">
            <summary>
            Returns a list of policy import extensions in the importer parameter and adds a SecurityBindingElementImporter if not already present in the list.
            </summary>
            <param name="importer">The WsdlImporter object</param>
            <returns>The list of PolicyImportExtension objects</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.OrganizationWebProxyClientAsyncContextInitializer">
            <summary>
                Manages context for sdk calls
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.WebProxyClientAsync`1.GetXrmSdkAssemblyFileVersion">
            <summary>
                Get's the file version of the Xrm Sdk assembly that is loaded in the current client domain.
                For Sdk clients called via the OrganizationServiceProxy this is the version of the local Microsoft.Xrm.Sdk dll used
                by the Client App.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Connector.WebProxyClientContextAsyncInitializer`1">
            <summary>
                Manages context for sdk calls
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Connector.WebProxyClientContextAsyncInitializer`1.#ctor(Microsoft.PowerPlatform.Dataverse.Client.Connector.WebProxyClientAsync{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xrm.Sdk.WebServiceClient.WebProxyClientContextInitializer`1"/> class.
                Constructs a context initializer
            </summary>
            <param name="proxy">sdk proxy</param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType">
            <summary>
            Allowed typelist of entities
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Boolean">
            <summary>
            Bool - Converts from bool
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.DateTime">
            <summary>
            DateTime - Converts from a DataTime Object
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Decimal">
            <summary>
            Decimal, for money, use Money - Converts from a decimal type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Float">
            <summary>
            Double type, while Dataverse calls this a float, it is actually a double for money, use Money - Converts from a double type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Money">
            <summary>
            Money Type - Converts from a decimal type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Number">
            <summary>
            Whole number - Converts from a Int type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Customer">
            <summary>
            Ref Type for Dataverse,  Creates an EntityReference 
            You need to provide a Guid as a value, and a the name of an entity for the lookup key 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Key">
            <summary>
            Primary Key - Converts from a Guid Type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Lookup">
            <summary>
            Ref Type for Dataverse,  Creates an EntityReference 
            You need to provide a Guid as a value, and a the name of an entity for the lookup key 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Picklist">
            <summary>
            Pick List value - Converts from a Int type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.String">
            <summary>
            String type - Converts from a string type.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.UniqueIdentifier">
            <summary>
            Guid Type - Converts from a Guid Type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Image">
            <summary>
            Use image columns to display a single image per row in the application
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.File">
            <summary>
            The File column is used for storing binary data
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType.Raw">
            <summary>
            User Specified type... will be appended directly. This type must be one of the valid Dataverse types
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper">
            <summary>
            Contains a variable definition. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper.Value">
            <summary>
            Value to set
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper.Type">
            <summary>
            Value Type.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper.ReferencedEntity">
            <summary>
            Name of the entity that a Lookup or Related Customer Entity
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper.#ctor">
            <summary>
            Create a new Data Type
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper.#ctor(System.Object,Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType)">
            <summary>
            Create a new Data Type 
            </summary>
            <param name="data">Data to Set</param>
            <param name="CdsFieldType">Type of Data to Set</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper.#ctor(System.Object,Microsoft.PowerPlatform.Dataverse.Client.DataverseFieldType,System.String)">
            <summary>
            Create a new Data Type 
            </summary>
            <param name="data">Data to Set</param>
            <param name="CdsFieldType">Type of Data to Set</param>
            <param name="relatedEntityName">Name of the related entity, applies to the Field Types: Customer and Lookup</param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DataverseServiceClientBuilder">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseServiceClientBuilder.#ctor(Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions)">
            <summary>
            
            </summary>
            <param name="connectionOptions"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseServiceClientBuilder.Create(Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions)">
            <summary>
            
            </summary>
            <param name="connectionOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.ServiceCollectionExtentions">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceCollectionExtentions.AddDataverseServiceClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions})">
            <summary>
            TBD
            </summary>
            <param name="services"></param>
            <param name="connectionOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DataverseTelemetryBehaviors">
            <summary>
            Adding support to Send the User Agent Header.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTelemetryBehaviors.#ctor(Microsoft.PowerPlatform.Dataverse.Client.ConnectionService)">
            <summary>
            Constructor for building the hook to call into the platform.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTelemetryBehaviors.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary/>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTelemetryBehaviors.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
            <summary/>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger">
            <summary>
            Log Entry
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.LastError">
            <summary>
            Last Error from Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.DefaultTraceSourceName">
            <summary>
            Default TraceSource Name
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.Logs">
            <summary>
            Collection of logs captured to date.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.LogRetentionDuration">
            <summary>
            Defines to the maximum amount of time in Minuets that logs will be kept in memory before being purged
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.EnabledInMemoryLogCapture">
            <summary>
            Enables or disabled in-memory log capture.
            Default is false.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.#ctor(System.String)">
            <summary>
            Constructs the CdsTraceLogger class.
            </summary>
            <param name="traceSourceName"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.ClearLogCache">
            <summary>
            Clears log cache.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.Log(System.String)">
            <summary>
            Log a Message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.Log(System.String,System.Diagnostics.TraceEventType)">
            <summary>
            Log a Trace event
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.Log(System.String,System.Diagnostics.TraceEventType,System.Exception)">
            <summary>
            Log a Trace event
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.Log(System.Exception)">
            <summary>
            Log an error with an Exception
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.LogRetry(System.Int32,Microsoft.Xrm.Sdk.OrganizationRequest,System.TimeSpan,System.Boolean,System.Boolean,System.String)">
            <summary>
            log retry message
            </summary>
            <param name="retryCount">retryCount</param>
            <param name="req">request</param>
            <param name="retryPauseTimeRunning">Value used by the retry system while the code is running, this value can scale up and down based on throttling limits.</param>
            <param name="isTerminalFailure">represents if it is final retry failure</param>
            <param name="isThrottled">If set, indicates that this was caused by a throttle</param>
            <param name="webUriMessageReq"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.LogException(Microsoft.Xrm.Sdk.OrganizationRequest,System.Exception,System.String,System.String)">
            <summary>
            log exception message
            </summary>
            <param name="req">request</param>
            <param name="ex">exception</param>
            <param name="errorStringCheck">errorStringCheck</param>
            <param name="webUriMessageReq"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.LogFailure(Microsoft.Xrm.Sdk.OrganizationRequest,System.Guid,System.Nullable{System.Guid},System.Boolean,System.TimeSpan,System.Diagnostics.Stopwatch,System.Exception,System.String,System.Boolean,System.String)">
            <summary>
            log failure message
            </summary>
            <param name="req">request</param>
            <param name="requestTrackingId">requestTrackingId</param>
            <param name="sessionTrackingId">This ID is used to support Dataverse Telemetry</param>
            <param name="disableConnectionLocking">Connection locking disabled</param>
            <param name="LockWait">LockWait</param>
            <param name="logDt">logDt</param>
            <param name="ex">ex</param>
            <param name="errorStringCheck">errorStringCheck</param>
            <param name="isTerminalFailure">represents if it is final retry failure</param>
            <param name="webUriMessageReq">.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Exception)">
            <summary>
            Logs data to memory.
            </summary>
            <param name="eventType"></param>
            <param name="id"></param>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.GetExceptionDetail(System.Object,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder)">
            <summary>
            Disassembles the Exception into a readable block
            </summary>
            <param name="objException">Exception to work with</param>
            <param name="sw">Writer to write too</param>
            <param name="level">depth</param>
            <param name="lastErrorMsg">Last Writer to write too</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.GetFirstLineFromString(System.String)">
            <summary>
            returns the first line from the text block.
            </summary>
            <param name="textBlock"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.GenerateOrgErrorDetailsInfo(Microsoft.Xrm.Sdk.ErrorDetailCollection)">
            <summary>
            Formats the detail collection from a service exception.
            </summary>
            <param name="errorDetails"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.FormatExceptionMessage(System.String,System.String,System.String,System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Creates the exception message.
            </summary>
            <param name="source">Source of Exception</param>
            <param name="targetSite">Target of Exception</param>
            <param name="message">Exception Message</param>
            <param name="stackTrace">StackTrace</param>
            <param name="helpLink">Url for help. </param>
            <param name="sw">Writer to write too</param>
            <param name="level">Depth of Exception</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.FormatOrgFaultMessage(System.String,System.String,System.String,System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Formats an Exception specific to an organization fault.
            </summary>
            <param name="message">Exception Message</param>
            <param name="timeOfEvent">Time occurred</param>
            <param name="errorCode">Error code of message</param>
            <param name="traceText">Message Text</param>
            <param name="helpLink">Help Link URL</param>
            <param name="sw">Writer to write too</param>
            <param name="level">Depth</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger.FormatSvcFaultMessage(System.String,System.String,System.String,System.Collections.IDictionary,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Formats an Exception specific to an organization fault.
            </summary>
            <param name="message">Exception Message</param>
            <param name="source">Source of error.</param>
            <param name="errorCode">Error code of message</param>
            <param name="dataItems">Data Items</param>
            <param name="helpLink">Help Link</param>
            <param name="sw">Writer to write too</param>
            <param name="level">Depth</param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.TraceControlSettings">
            <summary>
            This class provides an override for the default trace settings.
            These settings must be set before the components in the control are used for them to be effective.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceControlSettings.RegisterdTraceListeners">
            <summary>
            Returns the Registered Trace Listeners in the override object.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceControlSettings.TraceLevel">
            <summary>
            Override Trace Level setting.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceControlSettings.#cctor">
            <summary>
            Builds the base trace settings
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceControlSettings.CloseListeners">
            <summary>
            Closes any trace listeners that were configured
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceControlSettings.AddTraceListener(System.Diagnostics.TraceListener)">
            <summary>
            Adds a listener to the trace listen array
            </summary>
            <param name="listenerToAdd">Trace Listener you wish to add</param>
            <returns>true on success, false on fail.</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DynamicEntityUtility">
            <summary>
            Summary description for DynamicEntityUtility
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicEntityUtility.GetAttributeDataByEntity(System.String,System.String[])">
            <summary>
            Internal Use only
            </summary>
            <param name="entityName"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicEntityUtility.GetAttributeDataByEntity(System.String,System.Guid,System.String[])">
            <summary>
            Retrieve metadata for a single Dataverse record
            </summary>
            <param name="entityName">A string name of the entity type being retrieved e.g. contact</param>
            <param name="entityId">A Guid representing the record id we want to retrieve</param>
            <param name="attributes">An array of strings representing the list of attributes we want to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicEntityUtility.RetrieveByIdAsDynamicEntity(System.String,System.Guid,System.String[])">
            <summary>
            Return a single record as a dynamic entity based on a given Guid
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener">
            <summary>
            Extension to the FileLogTraceListner class.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.MaxFileCount">
            <summary>
            Number of files to keep while rolling.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.#ctor">
            <summary>
            The class constructor.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.#ctor(System.String)">
            <summary>
            The class constructor.
            </summary>
            <param name="name">Source Path</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.IsWritePermitted(System.String)">
            <summary>
            Checks if the CustomLocation Path has write permission
            </summary>
            <param name="Location">Custom Location Path</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
             <summary>
            Trace event is Overriden to check the Log file Access.
             </summary>
             <param name="eventCache">TraceEventCache</param>
             <param name="source">Source</param>
             <param name="eventType">TraceEventType</param>
             <param name="id">Id</param>
             <param name="format">Format Options</param>
             <param name="args">Array of message objects</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Trace event is Overriden to check the Log file Access.
            </summary>
            <param name="eventCache">TraceEventCache</param>
            <param name="source">Source</param>
            <param name="eventType">TraceEventType</param>
            <param name="id">Id</param>
            <param name="message">message string</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.FormatMessage(System.String)">
            <summary>
            Format the message with additional information
            </summary>
            <param name="message">Message to be logged</param>
            <returns>Formatted message</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.TraceEventCustom(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Trace event. Allows overriden behavior in inheriting classes
            </summary>
            <param name="eventCache"></param>
            <param name="source"></param>
            <param name="eventType"></param>
            <param name="id"></param>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DynamicsFileLogTraceListener.GetSupportedAttributes">
            <summary>
            Adding MaxFileCount to the suported attribute list
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Environs.XrmSdkFileVersion">
            <summary>
            Version number of the XrmSDK 
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions">
            <summary>
            Dataverse Service Client extensions for batch operations. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.CreateBatchOperationRequest(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a Batch Request for executing batch operations.  This returns an ID that will be used to identify a request as a batch request vs a "normal" request.
            </summary>
            <param name="batchName">Name of the Batch</param>
            <param name="returnResults">Should Results be returned</param>
            <param name="continueOnError">Should the process continue on an error.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.GetBatchOperationIdRequestByName(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            Returns the batch id for a given batch name.
            </summary>
            <param name="batchName">Name of Batch</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.GetBatchRequestAtPosition(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid,System.Int32)">
            <summary>
            Returns the organization request at a give position
            </summary>
            <param name="batchId">ID of the batch</param>
            <param name="position">Position</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.ReleaseBatchInfoById(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid)">
            <summary>
            Release a batch from the stack
            Once you have completed using a batch, you must release it from the system.
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <param name="batchId">ID of the batch</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.GetBatchById(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid)">
            <summary>
            Returns a request batch by BatchID
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <param name="batchId">ID of the batch</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.RetrieveBatchResponse(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid)">
            <summary>
            Executes the batch command and then parses the retrieved items into a list.
            If there exists a exception then the LastException would be filled with the first item that has the exception.
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <param name="batchId">ID of the batch to run</param>
            <returns>results which is a list of responses(type <![CDATA[ List<Dictionary<string, Dictionary<string, object>>> ]]>) in the order of each request or null or complete failure  </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.ExecuteBatch(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid)">
            <summary>
            Begins running the Batch command.
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <param name="batchId">ID of the batch to run</param>
            <returns>true if the batch begins, false if not. </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.BatchExtensions.AddRequestToBatch(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid,Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.String,System.Boolean)">
            <summary>
            Adds a request to a batch with display and handling logic
            will fail out if batching is not enabled.
            </summary>
            <param name="batchId">ID of the batch to add too</param>
            <param name="req">Organization request to Add</param>
            <param name="batchTagText">Batch Add Text, this is the text that will be reflected when the batch is added - appears in the batch diags</param>
            <param name="successText">Success Added Batch - appears in webSvcActions diag</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions">
            <summary>
            Extensions to support more generic record interaction mechanic's 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.CreateNewRecord(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper},System.String,System.Boolean,System.Guid,System.Boolean)">
            <summary>
            Uses the dynamic entity patter to create a new entity
            </summary>
            <param name="entityName">Name of Entity To create</param>
            <param name="valueArray">Initial Values</param>
            <param name="applyToSolution">Optional: Applies the update with a solution by Unique name</param>
            <param name="enabledDuplicateDetection">Optional: if true, enabled Dataverse onboard duplicate detection</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Guid on Success, Guid.Empty on fail</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.UpdateEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper},System.String,System.Boolean,System.Guid,System.Boolean)">
            <summary>
            Generic update entity
            </summary>
            <param name="entityName">String version of the entity name</param>
            <param name="keyFieldName">Key fieldname of the entity </param>
            <param name="id">Guid ID of the entity to update</param>
            <param name="fieldList">Fields to update</param>
            <param name="applyToSolution">Optional: Applies the update with a solution by Unique name</param>
            <param name="enabledDuplicateDetection">Optional: if true, enabled Dataverse onboard duplicate detection</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.UpdateStateAndStatusForEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Updates the State and Status of the Entity passed in.
            </summary>
            <param name="entName">Name of the entity</param>
            <param name="id">Guid ID of the entity you are updating</param>
            <param name="stateCode">String version of the new state</param>
            <param name="statusCode">String Version of the new status</param>
            <param name="batchId">Optional : Batch ID  to attach this request too.</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success. </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.UpdateStateAndStatusForEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Int32,System.Int32,System.Guid,System.Boolean)">
            <summary>
            Updates the State and Status of the Entity passed in.
            </summary>
            <param name="entName">Name of the entity</param>
            <param name="id">Guid ID of the entity you are updating</param>
            <param name="stateCode">Int version of the new state</param>
            <param name="statusCode">Int Version of the new status</param>
            <param name="batchId">Optional : Batch ID  to attach this request too.</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success. </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.DeleteEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Deletes an entity from the Dataverse
            </summary>
            <param name="entityType">entity type name</param>
            <param name="entityId">entity id</param>
            <param name="batchId">Optional : Batch ID  to attach this request too.</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.CreateAnnotation(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper},System.Guid,System.Boolean)">
            <summary>
            This creates a annotation [note] entry, related to a an existing entity
            <para>Required Properties in the fieldList</para>
            <para>notetext (string) = Text of the note,  </para>
            <para>subject (string) = this is the title of the note</para>
            </summary>
            <param name="targetEntityTypeName">Target Entity TypeID</param>
            <param name="targetEntityId">Target Entity ID</param>
            <param name="fieldList">Fields to populate</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.CreateNewActivityEntry(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String,System.Guid,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper},System.Guid,System.Boolean)">
            <summary>
            Creates a new activity against the target entity type
            </summary>
            <param name="activityEntityTypeName">Type of Activity you would like to create</param>
            <param name="regardingEntityTypeName">Entity type of the Entity you want to associate with.</param>
            <param name="subject">Subject Line of the Activity</param>
            <param name="description">Description Text of the Activity </param>
            <param name="regardingId">ID of the Entity to associate the Activity too</param>
            <param name="creatingUserId">User ID that Created the Activity *Calling user must have necessary permissions to assign to another user</param>
            <param name="fieldList">Additional fields to add as part of the activity creation</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Guid of Activity ID or Guid.empty</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.CloseActivity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Closes the Activity type specified.
            The Activity Entity type supports fax , letter , and phonecall
            <para>*Note: This will default to using English names for Status. if you need to use Non-English, you should populate the names for completed for the status and state.</para>
            </summary>
            <param name="activityEntityType">Type of Activity you would like to close.. Supports fax, letter, phonecall</param>
            <param name="activityId">ID of the Activity you want to close</param>
            <param name="stateCode">State Code configured on the activity</param>
            <param name="statusCode">Status code on the activity </param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true if success false if not.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.UpdateStateStatusForEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.String,System.Int32,System.Int32,System.Guid,System.Boolean)">
            <summary>
            Updates the state of an activity
            </summary>
            <param name="entName"></param>
            <param name="entId"></param>
            <param name="newState"></param>
            <param name="newStatus"></param>
            <param name="newStateid">ID for the new State ( Skips metadata lookup )</param>
            <param name="newStatusid">ID for new Status ( Skips Metadata Lookup)</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.CreateEntityAssociation(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.Boolean)">
            <summary>
            Associates one Entity to another where an M2M Relationship Exists.
            </summary>
            <param name="entityName1">Entity on one side of the relationship</param>
            <param name="entity1Id">The Id of the record on the first side of the relationship</param>
            <param name="entityName2">Entity on the second side of the relationship</param>
            <param name="entity2Id">The Id of the record on the second side of the relationship</param>
            <param name="relationshipName">Relationship name between the 2 entities</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.CreateMultiEntityAssociation(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.Collections.Generic.List{System.Guid},System.String,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Associates multiple entities of the same time to a single entity
            </summary>
            <param name="targetEntity">Entity that things will be related too.</param>
            <param name="targetEntity1Id">ID of entity that things will be related too</param>
            <param name="sourceEntityName">Entity that you are relating from</param>
            <param name="sourceEntitieIds">ID's of the entities you are relating from</param>
            <param name="relationshipName">Name of the relationship between the target and the source entities.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="isReflexiveRelationship">Optional: if set to true, indicates that this is a N:N using a reflexive relationship</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.CRUDExtentions.DeleteEntityAssociation(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.Guid,System.String,System.Guid,System.Boolean)">
            <summary>
            Removes the Association between 2 entity items where an M2M Relationship Exists.
            </summary>
            <param name="entityName1">Entity on one side of the relationship</param>
            <param name="entity1Id">The Id of the record on the first side of the relationship</param>
            <param name="entityName2">Entity on the second side of the relationship</param>
            <param name="entity2Id">The Id of the record on the second side of the relationship</param>
            <param name="relationshipName">Relationship name between the 2 entities</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions">
            <summary>
            Extensions to support deploying solutions and data to Dataverse. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.SubmitImportRequest(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest,System.DateTime)">
            <summary>
            Starts an Import request for CDS.
            <para>Supports a single file per Import request.</para>
            </summary>
            <param name="delayUntil">Delays the import jobs till specified time - Use DateTime.MinValue to Run immediately </param>
            <param name="importRequest">Import Data Request</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Guid of the Import Request, or Guid.Empty.  If Guid.Empty then request failed.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportDataMap(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Boolean,System.Boolean)">
            <summary>
            Used to upload a data map to the Dataverse
            </summary>
            <param name="dataMapXml">XML of the datamap in string form</param>
            <param name="replaceIds">True to have Dataverse replace ID's on inbound data, False to have inbound data retain its ID's</param>
            <param name="dataMapXmlIsFilePath">if true, dataMapXml is expected to be a File name and path to load.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Returns ID of the datamap or Guid.Empty</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportSolutionAsync(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid@,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Import Solution Async used Execute Async pattern to run a solution import.
            </summary>
            <param name="solutionPath">Path to the Solution File</param>
            <param name="activatePlugIns">Activate Plugin's and workflows on the Solution </param>
            <param name="importId"><para>This will populate with the Import ID even if the request failed.
            You can use this ID to request status on the import via a request to the ImportJob entity.</para></param>
            <param name="overwriteUnManagedCustomizations">Forces an overwrite of unmanaged customizations of the managed solution you are installing, defaults to false</param>
            <param name="skipDependancyOnProductUpdateCheckOnInstall">Skips dependency against dependencies flagged as product update, defaults to false</param>
            <param name="importAsHoldingSolution">Applies only on Dataverse organizations version 7.2 or higher.  This imports the Dataverse solution as a holding solution utilizing the “As Holding” capability of ImportSolution </param>
            <param name="isInternalUpgrade">Internal Microsoft use only</param>
            <param name="extraParameters">Extra parameters</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Returns the Async Job ID.  To find the status of the job, query the AsyncOperation Entity using GetEntityDataByID using the returned value of this method</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportSolution(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid@,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            <para>
            Imports a Dataverse solution to the Dataverse Server currently connected.
            <para>*** Note: this is a blocking call and will take time to Import to Dataverse ***</para>
            </para>
            </summary>
            <param name="solutionPath">Path to the Solution File</param>
            <param name="activatePlugIns">Activate Plugin's and workflows on the Solution </param>
            <param name="importId"><para>This will populate with the Import ID even if the request failed.
            You can use this ID to request status on the import via a request to the ImportJob entity.</para></param>
            <param name="overwriteUnManagedCustomizations">Forces an overwrite of unmanaged customizations of the managed solution you are installing, defaults to false</param>
            <param name="skipDependancyOnProductUpdateCheckOnInstall">Skips dependency against dependencies flagged as product update, defaults to false</param>
            <param name="importAsHoldingSolution">Applies only on Dataverse organizations version 7.2 or higher.  This imports the Dataverse solution as a holding solution utilizing the “As Holding” capability of ImportSolution </param>
            <param name="isInternalUpgrade">Internal Microsoft use only</param>
            <param name="serviceClient">ServiceClient</param>
            <param name="extraParameters">Extra parameters</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.DeleteAndPromoteSolutionAsync(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            Executes a Delete and Propmote Request against Dataverse using the Async Pattern.
            </summary>
            <param name="uniqueName">Unique Name of solution to be upgraded</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Returns the Async Job ID.  To find the status of the job, query the AsyncOperation Entity using GetEntityDataByID using the returned value of this method</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.InstallSampleData(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient)">
            <summary>
            <para>
            Request Dataverse to install sample data shipped with Dataverse. Note this is process will take a few moments to execute.
            <para>This method will return once the request has been submitted.</para>
            </para>
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <returns>ID of the Async job executing the request</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.UninstallSampleData(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient)">
            <summary>
            <para>
            Request Dataverse to remove sample data shipped with Dataverse. Note this is process will take a few moments to execute.
            This method will return once the request has been submitted.
            </para>
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <returns>ID of the Async job executing the request</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.IsSampleDataInstalled(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient)">
            <summary>
            Determines if the Dataverse sample data has been installed
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <returns>True if the sample data is installed, False if not. </returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportStatus">
            <summary>
            ImportStatus Reasons
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportStatus.NotImported">
            <summary> Not Yet Imported </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportStatus.InProgress">
            <summary> Import is in Progress </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportStatus.Completed">
            <summary> Import has Completed </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportStatus.Failed">
            <summary> Import has Failed </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest">
            <summary>
            Describes an import request for Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.ImportName">
            <summary>
            Name of the Import Request.  this Name will appear in Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.Mode">
            <summary>
            Sets or gets the Import Mode.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.DataMapFileId">
            <summary>
            ID of the DataMap to use
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.DataMapFileName">
            <summary>
            Name of the DataMap File to use
            ID or Name is required
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.UseSystemMap">
            <summary>
            if True, infers the map from the type of entity requested..
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.Files">
            <summary>
            List of files to import in this job,  there must be at least one.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.ImportMode">
            <summary>
            Mode of the Import, Update or Create
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.ImportMode.Create">
            <summary>
            Create a new Import
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.ImportMode.Update">
            <summary>
            Update to Imported Items
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem">
            <summary>
            Describes an Individual Import Item.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FileName">
            <summary>
            File Name of Individual file
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FileType">
            <summary>
            Type of Import file.. XML or CSV
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FileContentToImport">
            <summary>
            This is the CSV file you wish to import,
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.EnableDuplicateDetection">
            <summary>
            This enabled duplicate detection rules
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.SourceEntityName">
            <summary>
            Name of the entity that Originated the data.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.TargetEntityName">
            <summary>
            Name of the entity that Target Entity the data.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.DataDelimiter">
            <summary>
            This is the delimiter for the Data,
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FieldDelimiter">
            <summary>
            this is the field separator
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.IsFirstRowHeader">
            <summary>
            Is the first row of the CSV the RowHeader?
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.RecordOwner">
            <summary>
            UserID or Team ID of the Record Owner ( from systemuser )
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.IsRecordOwnerATeam">
            <summary>
            Set true if the Record Owner is a Team
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.DataDelimiterCode">
            <summary>
            Key used to delimit data in the import file
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.DataDelimiterCode.DoubleQuotes">
            <summary>
            Specifies "
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.DataDelimiterCode.None">
            <summary>
            Specifies no delimiter
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.DataDelimiterCode.SingleQuote">
            <summary>
            Specifies '
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FieldDelimiterCode">
            <summary>
            Key used to delimit fields in the import file
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FieldDelimiterCode.Colon">
            <summary>
            Specifies :
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FieldDelimiterCode.Comma">
            <summary>
            Specifies ,
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FieldDelimiterCode.SingleQuote">
            <summary>
            Specifies '
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FileTypeCode">
            <summary>
            Type if file described in the FileContentToImport
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FileTypeCode.CSV">
            <summary>
            CSV File Type
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportFileItem.FileTypeCode.XML">
            <summary>
            XML File type
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DeploymentExtensions.ImportSolutionToImpl(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid@,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            <para>
            Imports a Dataverse solution to the Dataverse Server currently connected.
            <para>*** Note: this is a blocking call and will take time to Import to Dataverse ***</para>
            </para>
            </summary>
            <param name="solutionPath">Path to the Solution File</param>
            <param name="activatePlugIns">Activate Plugin's and workflows on the Solution </param>
            <param name="importId"><para>This will populate with the Import ID even if the request failed.
            You can use this ID to request status on the import via a request to the ImportJob entity.</para></param>
            <param name="overwriteUnManagedCustomizations">Forces an overwrite of unmanaged customizations of the managed solution you are installing, defaults to false</param>
            <param name="skipDependancyOnProductUpdateCheckOnInstall">Skips dependency against dependencies flagged as product update, defaults to false</param>
            <param name="importAsHoldingSolution">Applies only on Dataverse organizations version 7.2 or higher.  This imports the Dataverse solution as a holding solution utilizing the “As Holding” capability of ImportSolution </param>
            <param name="isInternalUpgrade">Internal Microsoft use only</param>
            <param name="useAsync">Requires the use of an Async Job to do the import. </param>
            <param name="serviceClient">ServiceClient</param>
            <param name="extraParameters">Extra parameters</param>
            <returns>Returns the Import Solution Job ID.  To find the status of the job, query the ImportJob Entity using GetEntityDataByID using the returned value of this method</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.GeneralExtensions">
            <summary>
            General Extensions for the Dataverse ServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.GeneralExtensions.ExecuteWorkflowOnEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Executes a named workflow on an object.
            </summary>
            <param name="workflowName">name of the workflow to run</param>
            <param name="id">ID to exec against</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Async Op ID of the WF or Guid.Empty</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.GeneralExtensions.AssignEntityToUser(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid,System.String,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Assign an Entity to the specified user ID
            </summary>
            <param name="userId">User ID to assign too</param>
            <param name="entityName">Target entity Name</param>
            <param name="entityId">Target entity id</param>
            <param name="batchId">Batch ID of to use, Optional</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.GeneralExtensions.AddEntityToQueue(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid,System.String,System.String,System.Guid,System.Boolean,System.Guid,System.Boolean)">
            <summary>
            This will route a Entity to a public queue,
            </summary>
            <param name="entityId">ID of the Entity to route</param>
            <param name="entityName">Name of the Entity that the Id describes</param>
            <param name="queueName">Name of the Queue to Route Too</param>
            <param name="workingUserId">ID of the user id to set as the working system user</param>
            <param name="setWorkingByUser">if true Set the worked by when doing the assign</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.GeneralExtensions.SendSingleEmail(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Guid,System.String,System.Guid,System.Boolean)">
            <summary>
            this will send an Email to the
            </summary>
            <param name="emailid">ID of the Email activity</param>
            <param name="token">Tracking Token or Null</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.GeneralExtensions.GetMyUserId(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient)">
            <summary>
            Returns the user ID of the currently logged in user.
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions">
            <summary>
            Extensions for interacting with the Dataverse Metadata system. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetPickListElementFromMetadataEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String)">
            <summary>
            Gets a PickList, Status List or StateList from the metadata of an attribute
            </summary>
            <param name="targetEntity">text name of the entity to query</param>
            <param name="attribName">name of the attribute to query</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetGlobalOptionSetMetadata(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            Gets a global option set from Dataverse.
            </summary>
            <param name="globalOptionSetName">Name of the Option Set To get</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>OptionSetMetadata or null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetAllEntityMetadata(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Boolean,Microsoft.Xrm.Sdk.Metadata.EntityFilters)">
            <summary>
            Returns a list of entities with basic data from Dataverse
            </summary>
            <param name="onlyPublished">defaults to true, will only return published information</param>
            <param name="filter">EntityFilter to apply to this request, note that filters other then Default will consume more time.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityMetadata(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,Microsoft.Xrm.Sdk.Metadata.EntityFilters)">
            <summary>
            Returns the Metadata for an entity from Dataverse, defaults to basic data only.
            </summary>
            <param name="entityLogicalname">Logical name of the entity</param>
            <param name="queryFilter">filter to apply to the query, defaults to default entity data.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityFormIdListByType(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId)">
            <summary>
            Returns the Form Entity References for a given form type.
            </summary>
            <param name="entityLogicalname">logical name of the entity you are querying for form data.</param>
            <param name="formTypeId">Form Type you want</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>List of Entity References for the form type requested.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetAllAttributesForEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            Returns all attributes on a entity
            </summary>
            <param name="entityLogicalname">returns all attributes on a entity</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityAttributeMetadataForAttribute(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String)">
            <summary>
            Gets metadata for a specific entity's attribute.
            </summary>
            <param name="entityLogicalname">Name of the entity</param>
            <param name="attribName">Attribute Name</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityDisplayName(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Int32)">
            <summary>
            Gets an Entity Name by Logical name or Type code.
            </summary>
            <param name="entityName">logical name of the entity </param>
            <param name="entityTypeCode">Type code for the entity </param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Localized name for the entity in the current users language</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityDisplayNamePlural(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Int32)">
            <summary>
            Gets an Entity Name by Logical name or Type code.
            </summary>
            <param name="entityName">logical name of the entity </param>
            <param name="entityTypeCode">Type code for the entity </param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Localized plural name for the entity in the current users language</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.ResetLocalMetadataCache(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            This will clear the Metadata cache for either all entities or the specified entity
            </summary>
            <param name="serviceClient">ServiceClient</param>
            <param name="entityName">Optional: name of the entity to clear cached info for</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityDisplayNameImpl(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Int32,System.Boolean)">
            <summary>
            Gets the Entity Display Name.
            </summary>
            <param name="entityName"></param>
            <param name="entityTypeCode"></param>
            <param name="getPlural"></param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityTypeCode(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            Gets the typecode of an entity by name.
            </summary>
            <param name="entityName">name of the entity to get the type code on</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetEntityName(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Int32)">
            <summary>
            Returns the Entity name for the given Type code
            </summary>
            <param name="entityTypeCode"></param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.CreateOrUpdatePickListElement(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String,System.Collections.Generic.List{Microsoft.Xrm.Sdk.LocalizedLabel},System.Int32,System.Boolean)">
            <summary>
            Adds an option to a pick list on an entity.
            </summary>
            <param name="targetEntity">Entity Name to Target</param>
            <param name="attribName">Attribute Name on the Entity</param>
            <param name="locLabelList">List of Localized Labels</param>
            <param name="valueData">integer Value</param>
            <param name="publishOnComplete">Publishes the Update to the Live system.. note this is a time consuming process.. if you are doing a batch up updates, call PublishEntity Separately when you are finished.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>true on success, on fail check last error.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.PublishEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String)">
            <summary>
            Publishes an entity to the production system,
            used in conjunction with the Metadata services.
            </summary>
            <param name="entityName">Name of the entity to publish</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>True on success</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.LoadLCIDs(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient)">
            <summary>
            Loads the Currently loaded languages for Dataverse
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.AddValueToPropertyList(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Collections.Generic.KeyValuePair{System.String,Microsoft.PowerPlatform.Dataverse.Client.DataverseDataTypeWrapper},Microsoft.Xrm.Sdk.AttributeCollection)">
            <summary>
            Adds values for an update to a Dataverse propertyList
            </summary>
            <param name="Field"></param>
            <param name="PropertyList"></param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.MetadataExtensions.GetLocalLabel(Microsoft.Xrm.Sdk.Label)">
            <summary>
            Get the localize label from a Dataverse Label.
            </summary>
            <param name="localLabel"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions">
            <summary>
            Extentions to support query builder and untyped object returns. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataBySearchParams(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid,System.Boolean)">
            <summary>
            Gets a list of accounts based on the search parameters.
            </summary>
            <param name="entityName">Dataverse Entity Type Name to search</param>
            <param name="searchParameters">Array of Search Parameters</param>
            <param name="fieldList">List of fields to retrieve, Null indicates all Fields</param>
            <param name="searchOperator">Logical Search Operator</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="serviceClient">ServiceClient</param>
            <returns>List of matching Entity Types. </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataBySearchParams(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid,System.Boolean)">
            <summary>
            Gets a list of accounts based on the search parameters.
            </summary>
            <param name="entityName">Dataverse Entity Type Name to search</param>
            <param name="searchParameters">Array of Search Parameters</param>
            <param name="fieldList">List of fields to retrieve, Null indicates all Fields</param>
            <param name="searchOperator">Logical Search Operator</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>List of matching Entity Types. </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataBySearchParams(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid,System.Boolean)">
            <summary>
            Searches for data from an entity based on the search parameters.
            </summary>
            <param name="entityName">Name of the entity to search </param>
            <param name="searchParameters">Array of Search Parameters</param>
            <param name="fieldList">List of fields to retrieve, Null indicates all Fields</param>
            <param name="searchOperator">Logical Search Operator</param>
            <param name="pageCount">Number records per Page</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="sortParameters">Sort order</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>List of matching Entity Types. </returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByFetchSearch(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Boolean)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>results or null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByFetchSearchEC(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Boolean)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>results as an entity collection or null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByFetchSearch(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid,System.Boolean)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="pageCount">Number records per Page</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="serviceClient">ServiceClient</param>
            <returns>results or null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByFetchSearchEC(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid,System.Boolean)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="pageCount">Number records per Page</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>results as an Entity Collection or null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByLinkedSearch(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid,System.Boolean)">
            <summary>
            Queries an Object via a M to M Link
            </summary>
            <param name="returnEntityName">Name of the entity you want return data from</param>
            <param name="primarySearchParameters">Search Prams for the Return Entity</param>
            <param name="linkedEntityName">Name of the entity you are linking too</param>
            <param name="linkedSearchParameters">Search Prams for the Entity you are linking too</param>
            <param name="linkedEntityLinkAttribName">Key field on the Entity you are linking too</param>
            <param name="m2MEntityName">Dataverse Name of the Relationship </param>
            <param name="returnEntityPrimaryId">Key field on the Entity you want to return data from</param>
            <param name="searchOperator">Search Operator to apply</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="fieldList">List of Fields from the Returned Entity you want</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByLinkedSearch(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},System.String,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},System.String,System.String,System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Queries an Object via a M to M Link
            </summary>
            <param name="returnEntityName">Name of the entity you want return data from</param>
            <param name="primarySearchParameters">Search Prams for the Return Entity</param>
            <param name="linkedEntityName">Name of the entity you are linking too</param>
            <param name="linkedSearchParameters">Search Prams for the Entity you are linking too</param>
            <param name="linkedEntityLinkAttribName">Key field on the Entity you are linking too</param>
            <param name="m2MEntityName">Dataverse Name of the Relationship </param>
            <param name="returnEntityPrimaryId">Key field on the Entity you want to return data from</param>
            <param name="searchOperator">Search Operator to apply</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="fieldList">List of Fields from the Returned Entity you want</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="isReflexiveRelationship">If the relationship is defined as Entity:Entity or Account N:N Account, this parameter should be set to true</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataById(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Collections.Generic.List{System.String},System.Guid,System.Boolean)">
            <summary>
            Gets a List of variables from the account based on the list of field specified in the Fields List
            </summary>
            <param name="searchEntity">The entity to be searched.</param>
            <param name="entityId">ID of Entity to query </param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="fieldList">Populated Array of Key value pairs with the Results of the Search</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetActivitiesBy(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID.
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="searchOperator">Search Operator to use</param>
            <param name="searchParameters">Filters responses based on search prams.</param>
            <param name="sortParameters">Sort order</param>
            <param name="pageCount">Number of Pages</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Array of Activities</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetActivitiesBy(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID.
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="searchOperator">Search Operator to use</param>
            <param name="searchParameters">Filters responses based on search prams.</param>
            <param name="sortParameters">Sort order</param>
            <param name="pageCount">Number of Pages</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Array of Activities</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByRollup(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder},System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID.
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="searchOperator"></param>
            <param name="searchParameters">Filters responses based on search prams.</param>
            <returns>Array of Activities</returns>
            <param name="sortParameters">Sort Order</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="rollupfromEntity">Entity to Rollup from</param>
            <param name="serviceClient">ServiceClient</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetEntityDataByRollup(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Guid,System.String,System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},System.Collections.Generic.Dictionary{System.String,Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid,System.Boolean)">
            <summary>
            Returns all Activities Related to a given Entity ID.
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="rollupfromEntity">Entity to Rollup from</param>
            <param name="searchOperator">Search Operator to user</param>
            <param name="searchParameters">Dataverse Filter list to apply</param>
            <param name="sortParameters">Sort by</param>
            <param name="pageCount">Number of Pages</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetDataByKeyFromResultsSet``1(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            This function gets data from a Dictionary object, where "string" identifies the field name, and Object contains the data,
            this method then attempts to cast the result to the Type requested, if it cannot be cast an empty object is returned.
            </summary>
            <param name="results">Results from the query</param>
            <param name="key">key name you want</param>
            <typeparam name="T">Type if object to return</typeparam>
            <param name="serviceClient">ServiceClient</param>
            <returns>object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.BuildQueryFilter(System.String,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator)">
            <summary>
            Builds the Query expression to use with a Search.
            </summary>
            <param name="entityName"></param>
            <param name="searchParams"></param>
            <param name="fieldList"></param>
            <param name="searchOperator"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.AddPagingParametersToFetchXml(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Adds paging related parameter to the input fetchXml
            </summary>
            <param name="fetchXml">Input fetch Xml</param>
            <param name="pageCount">The number of records to be fetched</param>
            <param name="pageNum">The page number</param>
            <param name="pageCookie">Page cookie</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.BuildQueryFilter(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter},System.Collections.Generic.List{System.String},Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator)">
            <summary>
            Builds the Query expression to use with a Search.
            </summary>
            <param name="entityName"></param>
            <param name="searchParams"></param>
            <param name="fieldList"></param>
            <param name="searchOperator"></param>
            <param name="serviceClient">ServiceClient</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.BuildSearchFilterListFromSearchTerms(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter})">
            <summary>
            Creates a SearchFilterList from a Search string Dictionary
            </summary>
            <param name="inSearchParams">Inbound Search Strings</param>
            <param name="outSearchList">List that will be populated</param>
            <param name="serviceClient">ServiceClient</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.BuildFilterList(System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter})">
            <summary>
            Builds the filter list for a query
            </summary>
            <param name="searchParams"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.CreateResultDataSet(Microsoft.Xrm.Sdk.EntityCollection)">
            <summary>
            Creates and Returns a Search Result Set
            </summary>
            <param name="resp"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.AddDataToResultSet(System.Collections.Generic.Dictionary{System.String,System.Object}@,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Adds data from a Entity to result set
            </summary>
            <param name="resultSet"></param>
            <param name="dataEntity"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.LookupEntitiyID(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String,System.String,System.String)">
            <summary>
            Lookup a entity ID by a single search element.
            Used for Lookup Lists.
            </summary>
            <param name="SearchValue">Text to search for</param>
            <param name="ent">Entity Type to Search in </param>
            <param name="IDField">Field that contains the id</param>
            <param name="SearchField">Field to Search against</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>Guid of Entity or Empty Guid</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.QueryExtensions.GetLookupValueForEntity(Microsoft.PowerPlatform.Dataverse.Client.ServiceClient,System.String,System.String)">
            <summary>
            Gets the Lookup Value GUID for any given entity name
            </summary>
            <param name="entName">Entity you are looking for</param>
            <param name="Value">Value you are looking for</param>
            <param name="serviceClient">ServiceClient</param>
            <returns>ID of the lookup value in the entity</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseFilterConditionItem">
            <summary>
            Dataverse Filter item.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseFilterConditionItem.FieldName">
            <summary>
            Dataverse Field name to Filter on
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseFilterConditionItem.FieldValue">
            <summary>
            Value to use for the Filter
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseFilterConditionItem.FieldOperator">
            <summary>
            Dataverse Operator to apply
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter">
            <summary>
            Dataverse Filter class.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter.SearchConditions">
            <summary>
            List of Dataverse Filter conditions
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter.FilterOperator">
            <summary>
            Dataverse Filter Operator
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.DataverseSearchFilter.#ctor">
            <summary>
            Creates an empty Dataverse Search Filter.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId">
            <summary>
            Used with GetFormIdsForEntity Call
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId.Dashboard">
            <summary>
            Dashboard form
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId.AppointmentBook">
            <summary>
            Appointment book, for service requests.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId.Main">
            <summary>
            Main or default form
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId.Mobile">
            <summary>
            Mobile default form
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.FormTypeId.Other">
            <summary>
            User defined forms
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator">
            <summary>
            Logical Search Pram to apply to over all search.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator.None">
            <summary>
            Do not apply the Search Operator
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator.Or">
            <summary>
            Or Search
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSearchOperator.And">
            <summary>
            And Search
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder">
            <summary>
            Logical Search Pram to apply to over all search.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder.Ascending">
            <summary>
            Sort in Ascending
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Extensions.LogicalSortOrder.Descending">
            <summary>
            Sort in Descending
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListItem">
            <summary>
            PickList Item
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListItem.DisplayLabel">
            <summary>
            Display label for the PickList Item
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListItem.PickListItemId">
            <summary>
            ID of the picklist item
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListItem.#ctor(System.String,System.Int32)">
            <summary>
            Constructor with data.
            </summary>
            <param name="label"></param>
            <param name="id"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement">
            <summary>
            PickList data
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement.ActualValue">
            <summary>
            Current value of the PickList Item
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement.PickListLabel">
            <summary>
            Displayed Label
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement.DisplayValue">
            <summary>
            Displayed value for the PickList
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement.Items">
            <summary>
            Array of Potential Pick List Items.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Extensions.PickListMetaElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a PickList item with data.
            </summary>
            <param name="actualValue"></param>
            <param name="displayValue"></param>
            <param name="pickListLabel"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync">
            <summary>
            Interface containing extension methods provided by the DataverseServiceClient for the IOrganizationService Interface.
            These extensions will only operate from within the client and are not supported server side.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.CreateAsync(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <returns>The ID of the created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.RetrieveAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Query.ColumnSet)">
            <summary>
            Retrieves instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
            <param name="columnSet">Column Set collection to return with the request</param>
            <returns>Selected Entity</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.UpdateAsync(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Updates an entity and process any related entities
            </summary>
            <param name="entity">entity to update</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.DeleteAsync(System.String,System.Guid)">
            <summary>
            Delete instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.ExecuteAsync(Microsoft.Xrm.Sdk.OrganizationRequest)">
            <summary>
            Perform an action in an organization specified by the request.
            </summary>
            <param name="request">Refer to SDK documentation for list of messages that can be used.</param>
            <returns>Results from processing the request</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.AssociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Associate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.DisassociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Disassociate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync.RetrieveMultipleAsync(Microsoft.Xrm.Sdk.Query.QueryBase)">
            <summary>
            Retrieves a collection of entities
            </summary>
            <param name="query"></param>
            <returns>Returns an EntityCollection Object containing the results of the query</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2">
            <summary>
            Interface containing extension methods provided by the DataverseServiceClient for the IOrganizationService Interface.
            These extensions will only operate from within the client and are not supported server side.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.AssociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection,System.Threading.CancellationToken)">
            <summary>
            Associate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.CreateAsync(Microsoft.Xrm.Sdk.Entity,System.Threading.CancellationToken)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>The ID of the created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.CreateAndReturnAsync(Microsoft.Xrm.Sdk.Entity,System.Threading.CancellationToken)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Returns the newly created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.DeleteAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.DisassociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection,System.Threading.CancellationToken)">
            <summary>
            Disassociate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.ExecuteAsync(Microsoft.Xrm.Sdk.OrganizationRequest,System.Threading.CancellationToken)">
            <summary>
            Perform an action in an organization specified by the request.
            </summary>
            <param name="request">Refer to SDK documentation for list of messages that can be used.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Results from processing the request</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.RetrieveAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Query.ColumnSet,System.Threading.CancellationToken)">
            <summary>
            Retrieves instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
            <param name="columnSet">Column Set collection to return with the request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Selected Entity</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.RetrieveMultipleAsync(Microsoft.Xrm.Sdk.Query.QueryBase,System.Threading.CancellationToken)">
            <summary>
            Retrieves a collection of entities
            </summary>
            <param name="query"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Returns an EntityCollection Object containing the results of the query</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.IOrganizationServiceAsync2.UpdateAsync(Microsoft.Xrm.Sdk.Entity,System.Threading.CancellationToken)">
            <summary>
            Updates an entity and process any related entities
            </summary>
            <param name="entity">entity to update</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.BaseTypeExtensions.ToEnum``1(System.String)">
            <summary>
            Enum extension
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumName"></param>
            <returns>Enum Value</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.BaseTypeExtensions.ToEnum``1(System.Int32)">
            <summary>
            Converts a int to a Enum of the requested type (T)
            </summary>
            <typeparam name="T">Enum Type to translate too</typeparam>
            <param name="enumValue">Int Value too translate.</param>
            <returns>Enum of Type T</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.BaseTypeExtensions.ToDictionary(System.String)">
            <summary>
            Converts a ; separated string into a dictionary
            </summary>
            <param name="connectionString">String to parse</param>
            <returns>Dictionary of properties from the connection string</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.BaseTypeExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            Extension to support formating a string
            </summary>
            <param name="format">Formatting pattern</param>
            <param name="args">Argument collection</param>
            <returns>Formated String</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.BaseTypeExtensions.FirstNotNullOrEmpty``1(System.Collections.Generic.IDictionary{``0,System.String},``0[])">
            <summary>
            Extension to get the first item in a dictionary if the dictionary contains the key.
            </summary>
            <typeparam name="TKey">Type to return</typeparam>
            <param name="dictionary">Dictionary to search</param>
            <param name="keys">Collection of Keys to find.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.RequestResponseExtenstions">
            <summary>
            Organization request/response extenstions
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.RequestResponseExtenstions.ToExpandoObject(Microsoft.Xrm.Sdk.OrganizationRequest)">
            <summary>
            Converts OrganizationRequest object to ExpandoObject
            </summary>
            <param name="request">Organization request to convert</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.SecureStringExtensions">
            <summary>
            Adds a extension to Secure string
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.InternalExtensions.SecureStringExtensions.ToUnsecureString(System.Security.SecureString)">
            <summary>
            DeCrypt a Secure password 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility">
            <summary>
            Summary description for MetadataUtility
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility._entityMetadataCache">
            <summary>
            MetadataCache object.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility._attributeMetadataCache">
            <summary>
            Attribute metadata cache object
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility._globalOptionMetadataCache">
            <summary>
            Global option metadata cache object.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility._entityNameCache">
            <summary>
            Entity Name catch object
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility._lockObject">
            <summary>
            Lock object
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility._metadataLastValidatedAt">
            <summary>
            Last time Entity data was validated.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.ClearCachedEntityMetadata(System.String)">
            <summary>
            Clear a specific meta data entity
            </summary>
            <param name="entityName"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetAllEntityMetadata(System.Boolean,Microsoft.Xrm.Sdk.Metadata.EntityFilters)">
            <summary>
            Retrieves all metadata from the solution.. this is a time consuming task
            </summary>
            <param name="onlyPublished">only return "published" or "published state" of entities</param>
            <param name="filter">the depth if detail on the entity to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetEntityMetadata(System.String)">
            <summary>
            Returns Entity Metadata for requested entity.
            Applies returns all data available based on version type
            </summary>
            <param name="entityName">Name of the Entity, data is being requested on</param>
            <returns>Entity data</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetEntityMetadata(Microsoft.Xrm.Sdk.Metadata.EntityFilters,System.String)">
            <summary>
            returns entity data for a given entity
            </summary>
            <param name="requestType">What type of entity data do you want</param>
            <param name="entityName">name of the entity to query</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetEntityLogicalName(System.Int32)">
            <summary>
            Get the entity schema name based on the entity type code.
            </summary>
            <param name="entityTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetAttributeMetadata(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="entityName"></param>
             <param name="attributeName"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetAllAttributesMetadataByEntity(System.String)">
             <summary>
            
             </summary>
             <param name="entityName"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetRequiredAttributesByEntity(System.String)">
             <summary>
            
             </summary>
             <param name="entityName"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.GetGlobalOptionSetMetadata(System.String)">
            <summary>
            Retrieve Global OptionSet Information.
            </summary>
            <param name="optionSetName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility.ValidateMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions">
            <summary>
            Client Configuration Options Array.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.UpdateOptions(Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions)">
            <summary>
            Updates the instance of Options with a previously created Options Object. 
            </summary>
            <param name="options">PreLoaded Options Array</param>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MaxRetryCount">
            <summary>
            Number of retries for an execute operation
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.RetryPauseTime">
            <summary>
            Amount of time to wait between retries
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.UseWebApi">
            <summary>
            Use Web API instead of org service
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.UseWebApiLoginFlow">
            <summary>
            Use Web API instead of org service for logging into and getting boot up data.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.EnableAffinityCookie">
            <summary>
            Defaults to True.
            <para>When true, this setting applies the default connection routing strategy to connections to Dataverse.</para>
            <para>This will 'prefer' a given node when interacting with Dataverse which improves overall connection performance.</para>
            <para>When set to false, each call to Dataverse will be routed to any given node supporting your organization. </para>
            <para>See https://docs.microsoft.com/en-us/powerapps/developer/data-platform/api-limits#remove-the-affinity-cookie for proper use.</para>
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MaxFaultSizeOverride">
            <summary>
            MaxFaultSize override. - Use under Microsoft Direction only. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MaxReceivedMessageSizeOverride">
            <summary>
            MaxReceivedMessageSize override. - Use under Microsoft Direction only. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MaxBufferPoolSizeOveride">
            <summary>
            MaxBufferPoolSize override. - Use under Microsoft Direction only. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MSALRequestTimeout">
            <summary>
            Amount of time to wait for MSAL/AAD to wait for a token response before timing out
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MSALRetryCount">
            <summary>
            Number of retries to Get a token from MSAL.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions.MSALEnabledLogPII">
            <summary>
            Enabled Logging of PII in MSAL Log. - defaults to false.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions">
            <summary>
            Describes connection Options for the Dataverse ServiceClient
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.AuthenticationType">
            <summary>
             Defines which type of login will be used to connect to Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.ServiceUri">
            <summary>
            URL of the Dataverse Instance to connect too.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.UserName">
            <summary>
            User Name to use - Used with Interactive Login scenarios
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.Password">
            <summary>
            User Password to use - Used with Interactive Login scenarios
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.Domain">
            <summary>
            User Domain to use - Use with Interactive Login for On Premises 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.HomeRealmUri">
            <summary>
            Home Realm to use when working with AD Federation. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.RequireNewInstance">
            <summary>
            Require a unique instance of the Dataverse ServiceClient per Login. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.ClientId">
            <summary>
            Client \ Application ID to be used when logging into Dataverse. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.ClientSecret">
            <summary>
            Client Secret Id to use to login to Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.RedirectUri">
            <summary>
            Redirect Uri to use when connecting to dataverse.  Required for OAuth Authentication. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.TokenCacheStorePath">
            <summary>
            Path and FileName for MSAL Token Cache.  Used only for OAuth - User Interactive flows. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.LoginPrompt">
            <summary>
            Type of Login prompt to use. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.CertificateThumbprint">
            <summary>
            Certificate ThumbPrint to use to lookup machine certificate to use for authentication.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.CertificateStoreName">
            <summary>
            Certificate store name to look up thumbprint. <see cref="T:System.Security.Cryptography.X509Certificates.StoreName"/>
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.SkipDiscovery">
            <summary>
            Skip discovery leg when connecting to Dataverse 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.UseCurrentUserForLogin">
            <summary>
            (Windows Only) If True, Uses the current user of windows to attempt the login with
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.Logger">
            <summary>
            ILogger Interface for Dataverse ServiceClient. <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.AccessTokenProviderFunctionAsync">
            <summary>
            Function that Dataverse ServiceClient will call to request an access token for a given connection.  
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions.RequestAdditionalHeadersAsync">
            <summary>
            Function that Dataverse ServiceClient will call to request custom headers
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoverOrganizationsResult">
            <summary>
            Result of call to DiscoverOrganizationsAsync
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoverOrganizationsResult.#ctor(Microsoft.Xrm.Sdk.Discovery.OrganizationDetailCollection,Microsoft.Identity.Client.IAccount)">
            <summary>
            Constructor
            </summary>
            <param name="organizationDetailCollection">OrganizationDetailCollection</param>
            <param name="account">account</param>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoverOrganizationsResult.OrganizationDetailCollection">
            <summary>
            OrganizationDetailCollection
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoverOrganizationsResult.Account">
            <summary>
            MSAL account selected as part of dicovery authentication
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers">
            <summary>
            Dataverse online Discovery server enumeration
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.logger">
            <summary>
            Log entry
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers._OSDPServers">
            <summary>
            Contains the list of Online Discovery Servers
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.OSDPServers">
            <summary>
            Public Property to discovery servers
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.#ctor">
            <summary>
            Default constructor,  Builds baseline data for the Servers.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.GetServerByOrgUrl(System.Uri)">
            <summary>
            Parses an OrgURI to determine what the supporting discovery server is.
            </summary>
            <param name="orgUri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.GetServerByShortName(System.String)">
            <summary>
            Finds a Server by Name in the List or return null.
            </summary>
            <param name="shortName">Short Name of the server you are looking for</param>
            <returns>DiscoveryServer Data or Null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.GetServerByGeo(System.String)">
            <summary>
            Finds a Server Info by GEO Code.  Note NorthAmerica and GCC cannot be located this way.
            to use with NA you must short name,  NorthAmerica for NAM and NorthAmerica2 for GCC.
            </summary>
            <param name="geoCode">GEO of Discovery Instance you are looking for</param>
            <returns>DiscoveryServer Data or Null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.GetServerShortNameByDisplayName(System.String)">
            <summary>
            Finds the server short name by server uri
            </summary>
            <param name="serverDisplayName">Name of the Server to find</param>
            <returns></returns>
        </member>
        <member name="E:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.PropertyChanged">
            <summary>
            Raised when a property changes
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.Dispose(System.Boolean)">
            <summary>
            Clean up
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServers.Dispose">
            <summary>
            Clean up
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer">
            <summary>
            Describes a discovery server that can be used to determine what organizations a user is a member of.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.DisplayName">
            <summary>
            Display name of the Discovery Server
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.ShortName">
            <summary>
            Short name of the Discovery Server, this is used to store the server in the users config for later use.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.DiscoveryServerUri">
            <summary>
            Discovery server Uri, this is the URI necessary to connect to the Discovery server
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.RequiresRegionalDiscovery">
            <summary>
            When true, the global discovery server cannot be used to locate this instance, it must be a regional discovery query
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.RegionalGlobalDiscoveryServer">
            <summary>
            Server used to override the regional discovery server, if present its treated as using the Global Discovery server
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.GeoCode">
            <summary>
            Geo that hosts this Disco endpoint
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.#ctor(Microsoft.PowerPlatform.Dataverse.Client.ServerInfo)">
            <summary>
            Accepts a Server Info object
            </summary>
        </member>
        <member name="E:Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer.PropertyChanged">
            <summary>
            Raised when a property changes
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer">
            <summary>
            Describes a Single Organization returned from a Discovery server
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.FriendlyName">
            <summary>
            This is the display name for the organization that a user sees when working in Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.UniqueOrgName">
            <summary>
            This is the actual name for the organization in Dataverse, and is required to connect to Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.UrlHostName">
            <summary>
            This is the actual name for the organization in Dataverse, and is required to connect to Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.OrgDetail">
            <summary>
            This is the details of the Organization, returned directly from Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.DiscoveryServerName">
            <summary>
            This is the name assigned to the Discovery Server, this is used to visual separate organizations returned by Discovery server used, or Premise solutions. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.DiscoveryServer">
            <summary>
            This is the URI needed to connect to the Organization
            </summary>
        </member>
        <member name="E:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgByServer.PropertyChanged">
            <summary>
            WCF EVENT hook
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList">
            <summary>
            Describes the Collection of Orgs that a user may select from. This is used to display the list to the user
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList.OrgsList">
            <summary>
            List of Orgs
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList.#ctor">
            <summary>
            Container for Dataverse Orgs List. 
            </summary>
        </member>
        <member name="E:Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList.PropertyChanged">
            <summary>
            WPF EVENT HOOK
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient">
            <summary>
            Primary implementation of the API interface for Dataverse.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._CachObject">
            <summary>
            Cached Object collection, used for pick lists and such.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._loadedLCIDList">
            <summary>
            List of Dataverse Language ID's
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._cachObjecName">
            <summary>
            Name of the cache object.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._logEntry">
            <summary>
            Logging object for the Dataverse Interface.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._connectionSvc">
            <summary>
            Dataverse Web Service Connector layer
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._dynamicAppUtility">
            <summary>
            Dynamic app utility
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._metadataUtlity">
            <summary>
            Metadata Utility
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._lockObject">
            <summary>
            This is an internal Lock object,  used to sync communication with Dataverse.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._batchManager">
            <summary>
            BatchManager for Execute Multiple.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._sdkVersionProperty">
            <summary>
            SDK Version property backer.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._retryPauseTimeRunning">
            <summary>
            Value used by the retry system while the code is running,
            this value can scale up and down based on throttling limits.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._testOrgSvcInterface">
            <summary>
            Internal Organization Service Interface used for Testing
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._setupConnectionOptions">
            <summary>
            ConnectionsOptions object used with connection presetup and staging for connect. 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient._connectionOptions">
            <summary>
            Connections Options holder for connection call. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.OrganizationWebProxyClient">
            <summary>
             Internal OnLineClient
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.OnPremClient">
            <summary>
             Internal OnLineClient
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.InMemoryLogCollectionEnabled">
            <summary>
            Enabled Log Capture in memory
            This capability enables logs that would normally be sent to your configured
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.InMemoryLogCollectionTimeOutMinutes">
            <summary>
            This is the number of minuets that logs will be retained before being purged from memory. Default is 5 min.
            This capability controls how long the log cache is kept in memory.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.MaxRetryCount">
            <summary>
            Gets or sets max retry count.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RetryPauseTime">
            <summary>
            Gets or sets retry pause time.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.IsReady">
            <summary>
            if true the service is ready to accept requests.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.IsBatchOperationsAvailable">
            <summary>
            if true then Batch Operations are available.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Authority">
            <summary>
            OAuth Authority.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.OAuthUserId">
            <summary>
            Logged in Office365 UserId using OAuth.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.MaxConnectionTimeout">
            <summary>
            Gets or Sets the Max Connection Timeout for the connection.
            Default setting is 2 min,
            this property can also be set via app.config/app.settings with the property MaxConnectionTimeOutMinutes
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ActiveAuthenticationType">
            <summary>
            Authentication Type to use
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CurrentAccessToken">
            <summary>
            Returns the current access token in Use to connect to Dataverse.
            Note: this is only available when a token based authentication process is in use.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.EnableAffinityCookie">
            <summary>
            Defaults to True.
            <para>When true, this setting applies the default connection routing strategy to connections to Dataverse.</para>
            <para>This will 'prefer' a given node when interacting with Dataverse which improves overall connection performance.</para>
            <para>When set to false, each call to Dataverse will be routed to any given node supporting your organization. </para>
            <para>See https://docs.microsoft.com/en-us/powerapps/developer/data-platform/api-limits#remove-the-affinity-cookie for proper use.</para>
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DataverseService">
            <summary>
            Pointer to Dataverse Service.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DataverseServiceAsync">
            <summary>
            Pointer to Dataverse Service.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.SystemUser">
            <summary>
            Current user Record.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.LastError">
            <summary>
            Returns the Last String Error that was created by the Dataverse Connection
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.LastException">
            <summary>
            Returns the Last Exception from Dataverse.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectedOrgUriActual">
            <summary>
            Returns the Actual URI used to connect to Dataverse.
            this URI could be influenced by user defined variables.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectedOrgFriendlyName">
            <summary>
            Returns the friendly name of the connected Dataverse instance.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectedOrgUniqueName">
             <summary>
            
             Returns the unique name for the org that has been connected.
             </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectedOrgPublishedEndpoints">
            <summary>
            Returns the endpoint collection for the connected org.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.OrganizationDetail">
            <summary>
            OrganizationDetails for the currently connected environment.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectionLockObject">
            <summary>
            This is the connection lock object that is used to control connection access for various threads. This should be used if you are using the Datavers queries via Linq to lock the connection
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectedOrgVersion">
            <summary>
            Returns the Version Number of the connected Dataverse organization.
            If access before the Organization is connected, value returned will be null or 0.0
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectedOrgId">
            <summary>
            ID of the connected organization.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DisableCrossThreadSafeties">
            <summary>
            Disabled internal cross thread safeties, this will gain much higher performance, however it places the requirements of thread safety on you, the developer.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.GetAccessToken">
            <summary>
            Returns the access token from the attached function.
            This is set via the ServiceContructor that accepts a target url and a function to return an access token.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.GetCustomHeaders">
            <summary>
            Returns any additional or custom headers that need to be added to the request to Dataverse. 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CallerId">
            <summary>
            Gets or Sets the current caller ID
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CallerAADObjectId">
            <summary>
            Gets or Sets the AAD Object ID of the caller.
            This is supported for Xrm 8.1 + only
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.SessionTrackingId">
            <summary>
            This ID is used to support Dataverse Telemetry when trouble shooting SDK based errors.
            When Set by the caller, all Dataverse API Actions executed by this client will be tracked under a single session id for later troubleshooting.
            For example, you are able to group all actions in a given run of your client ( several creates / reads and such ) under a given tracking id that is shared on all requests.
            providing this ID when reporting a problem will aid in trouble shooting your issue.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ForceServerMetadataCacheConsistency">
            <summary>
            This will force the Dataverse server to refresh the current metadata cache with current DB config.
            Note, that this is a performance impacting property.
            Use of this flag will slow down operations server side as the server is required to check for consistency of the platform metadata against disk on each API call executed.
            It is recommended to use this ONLY in conjunction with solution import or delete operations.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.SdkVersionProperty">
            <summary>
            Get the Client SDK version property
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.TenantId">
            <summary>
            Gets the Tenant Id of the current connection.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.EnvironmentId">
            <summary>
            Gets the PowerPlatform Environment Id of the environment that is hosting this instance of Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.UseWebApi">
            <summary>
            Use Dataverse Web API instead of Dataverse Object Model service where possible - Defaults to False.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RecommendedDegreesOfParallelism">
            <summary>
            Server Hint for the number of concurrent threads that would provide optimal processing. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor">
            <summary>
            Default / Non accessible constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(Microsoft.Xrm.Sdk.IOrganizationService,System.Net.Http.HttpClient,System.String,System.Version,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Internal constructor used for testing.
            </summary>
            <param name="orgSvc"></param>
            <param name="httpClient"></param>
            <param name="targetVersion"></param>
            <param name="baseConnectUrl"></param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            ServiceClient to accept the connectionstring as a parameter
            </summary>
            <param name="dataverseConnectionString"></param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.Uri,System.Func{System.String,System.Threading.Tasks.Task{System.String}},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates an instance of ServiceClient who's authentication is managed by the caller.
            This requires the caller to implement a function that will accept the InstanceURI as a string will return the access token as a string on demand when the ServiceClient requires it.
            This approach is recommended when working with WebApplications or applications that are required to implement an on Behalf of flow for user authentication.
            </summary>
            <param name="instanceUrl">URL of the Dataverse instance to connect too.</param>
            <param name="tokenProviderFunction">Function that will be called when the access token is require for interaction with Dataverse.  This function must accept a string (InstanceURI) and return a string (accesstoken) </param>
            <param name="useUniqueInstance">A value of "true" Forces the ServiceClient to create a new connection to the Dataverse instance vs reusing an existing connection, Defaults to true.</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.String,System.Security.SecureString,System.String,System.String,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Log in with OAuth for online connections,
            <para>
            Utilizes the discovery system to resolve the correct endpoint to use given the provided server orgName, user name and password.
            </para>
            </summary>
            <param name="userId">User Id supplied</param>
            <param name="password">Password for login</param>
            <param name="regionGeo">Region where server is provisioned in for login</param>
            <param name="orgName">Name of the organization to connect</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Dataverse Discovery Server service. not required.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="promptBehavior">The prompt Behavior.</param>
            <param name="useDefaultCreds">(optional) If true attempts login using current user ( Online ) </param>
            <param name="tokenCacheStorePath">(Optional)The token cache path where token cache file is placed. if string.empty, will use default cache file store, if null, will use in memory cache</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.String,System.Security.SecureString,System.Uri,System.Boolean,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Log in with OAuth for online connections,
            <para>
            Will attempt to connect directly to the URL provided for the API endpoint.
            </para>
            </summary>
            <param name="userId">User Id supplied</param>
            <param name="password">Password for login</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="promptBehavior">The prompt Behavior.</param>
            <param name="useDefaultCreds">(optional) If true attempts login using current user ( Online ) </param>
            <param name="hostUri">API or Instance URI to access the Dataverse environment.</param>
            <param name="tokenCacheStorePath">(Optional)The token cache path where token cache file is placed. if string.empty, will use default cache file store, if null, will use in memory cache</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.String,System.Security.SecureString,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Log in with OAuth for On-Premises connections.
            </summary>
            <param name="userId">User Id supplied</param>
            <param name="password">Password for login</param>
            <param name="domain">Domain</param>
            <param name="hostName">Host name of the server that is hosting the Dataverse web service</param>
            <param name="port">Port number on the Dataverse Host Server ( usually 444 )</param>
            <param name="orgName">Organization name for the Dataverse Instance.</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">Dataverse Org Detail object, this is returned from a query to the Dataverse Discovery Server service. not required.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="promptBehavior">The prompt Behavior.</param>
            <param name="tokenCacheStorePath">(Optional)The token cache path where token cache file is placed. if string.empty, will use default cache file store, if null, will use in memory cache</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.StoreName,System.String,System.Uri,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Log in with Certificate Auth On-Premises connections.
            </summary>
            <param name="certificate">Certificate to use during login</param>
            <param name="certificateStoreName">StoreName to look in for certificate identified by certificateThumbPrint</param>
            <param name="certificateThumbPrint">ThumbPrint of the Certificate to load</param>
            <param name="instanceUrl">URL of the Dataverse instance to connect too</param>
            <param name="orgName">Organization name for the Dataverse Instance.</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Dataverse Discovery Server service. not required.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.StoreName,System.String,System.Uri,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Log in with Certificate Auth OnLine connections.
            This requires the org API URI.
            </summary>
            <param name="certificate">Certificate to use during login</param>
            <param name="certificateStoreName">StoreName to look in for certificate identified by certificateThumbPrint</param>
            <param name="certificateThumbPrint">ThumbPrint of the Certificate to load</param>
            <param name="instanceUrl">API URL of the Dataverse instance to connect too</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Dataverse Discovery Server service. not required.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.Uri,System.String,System.String,System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            ClientID \ ClientSecret Based Authentication flow.
            </summary>
            <param name="instanceUrl">Direct URL of Dataverse instance to connect too.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="clientSecret">Client Secret for Client Id.</param>
            <param name="useUniqueInstance">Use unique instance or reuse current connection.</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(System.Uri,System.String,System.Security.SecureString,System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            ClientID \ ClientSecret Based Authentication flow, allowing for Secure Client ID passing.
            </summary>
            <param name="instanceUrl">Direct URL of Dataverse instance to connect too.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="clientSecret">Client Secret for Client Id.</param>
            <param name="useUniqueInstance">Use unique instance or reuse current connection.</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(Microsoft.PowerPlatform.Dataverse.Client.Model.ConnectionOptions,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.Model.ConfigurationOptions)">
            <summary>
            Creating the ServiceClient Connection with a ConnectionOptions Object and ConfigurationOptions Object. This allows for deferred create of a Dataverse Service Client. 
            </summary>
            <param name="connectionOptions">Describes how the Connection should be created.</param>
            <param name="deferConnection">False by Default,  if True, stages the properties of the connection and returns.  You must call .Connect() to complete the connection. </param>
            <param name="serviceClientConfiguration">Described Configuration Options for the connection.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Connect">
            <summary>
            Connects the Dataverse Service Client instance when staged with the Deferd Connection constructor. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ConnectToService(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parse the given connection string
            Connects to Dataverse using CreateWebServiceConnection
            </summary>
            <param name="connectionString"></param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.#ctor(Microsoft.PowerPlatform.Dataverse.Client.Connector.OrganizationWebProxyClientAsync,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType,System.Version,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Uses the Organization Web proxy Client provided by the user
            </summary>
            <param name="externalOrgWebProxyClient">User Provided Organization Web Proxy Client</param>
            <param name="isCloned">when true, skips init</param>
            <param name="orginalAuthType">Auth type of source connection</param>
            <param name="sourceOrgVersion">source organization version</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CreateServiceConnection(System.Object,Microsoft.PowerPlatform.Dataverse.Client.AuthenticationType,System.String,System.String,System.String,System.Net.NetworkCredential,System.String,System.Security.SecureString,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,System.Uri,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,Microsoft.PowerPlatform.Dataverse.Client.Connector.OrganizationWebProxyClientAsync,System.String,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.Boolean,System.Boolean,System.Version,Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Sets up the Dataverse Web Service Connection
             For Connecting via AD
            </summary>
            <param name="externalOrgServiceProxy">if populated, is the org service to use to connect to Dataverse</param>
            <param name="requestedAuthType">Authentication Type requested</param>
            <param name="hostName">Host name of the server that is hosting the Dataverse web service</param>
            <param name="port">Port number on the Dataverse Host Server ( usually 5555 )</param>
            <param name="orgName">Organization name for the Dataverse Instance.</param>
            <param name="credential">Network Credential Object used to login with</param>
            <param name="userId">Live ID to connect with</param>
            <param name="password">Live ID Password to connect with</param>
            <param name="domain">Name of the Domain where the Dataverse is deployed</param>
            <param name="Geo">Region hosting the Dataverse online Server, can be NA, EMEA, APAC</param>
            <param name="claimsHomeRealm">HomeRealm Uri for the user</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">Dataverse Org Detail object, this is is returned from a query to the Dataverse Discovery Server service. not required.</param>
            <param name="clientId">Registered Client Id on Azure</param>
            <param name="promptBehavior">Default Prompt Behavior</param>
            <param name="redirectUri">Registered redirect uri for ADAL to return</param>
            <param name="externalOrgWebProxyClient">OAuth related web proxy client</param>
            <param name="certificate">Certificate to use during login</param>
            <param name="certificateStoreName">StoreName to look in for certificate identified by certificateThumbPrint</param>
            <param name="certificateThumbPrint">ThumbPrint of the Certificate to load</param>
            <param name="instanceUrl">Actual URI of the Organization Instance</param>
            <param name="isCloned">When True, Indicates that the construction request is coming from a clone operation. </param>
            <param name="useDefaultCreds">(optional) If true attempts login using current user ( Online ) </param>
            <param name="incomingOrgVersion">Incoming Org Version, used as part of clone.</param>
            <param name="externalLogger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <param name="tokenCacheStorePath">path for token file storage</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.GetAllLogs">
            <summary>
            Enabled only if InMemoryLogCollectionEnabled is true.
            Return all logs currently stored for the ServiceClient in queue.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.GetAllLogsAsStringList">
            <summary>
            Enabled only if InMemoryLogCollectionEnabled is true.
            Return all logs currently stored for the ServiceClient in queue in string list format with [UTCDateTime][LogEntry].
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Clone(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Clone, 'Clones" the current Dataverse ServiceClient with a new connection to Dataverse.
            Clone only works for connections creating using OAuth Protocol.
            </summary>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns>returns an active ServiceClient or null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Clone(System.Reflection.Assembly,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Clone, 'Clones" the current Dataverse Service client with a new connection to Dataverse.
            Clone only works for connections creating using OAuth Protocol.
            </summary>
            <param name="strongTypeAsm">Strong Type Assembly to reference as part of the create of the clone.</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DiscoverOnPremiseOrganizationsAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.String,System.Uri,System.String,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Discovers the organizations against an On-Premises deployment.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="clientId">The client Id.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior.</param>
            <param name="authority">The authority provider for OAuth tokens. Unique if any already known.</param>
            <param name="useDefaultCreds">(Optional) if specified, tries to use the current user</param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns>A collection of organizations</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DiscoverOnlineOrganizationsAsync(System.Uri,System.ServiceModel.Description.ClientCredentials,System.String,System.Uri,System.Boolean,System.String,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Discovers the organizations, used for OAuth.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="clientId">The client Id.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior.</param>
            <param name="isOnPrem">The deployment type: OnPrem or Online.</param>
            <param name="authority">The authority provider for OAuth tokens. Unique if any already known.</param>
            <param name="useDefaultCreds">(Optional) if specified, tries to use the current user</param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns>A collection of organizations</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DiscoverOnlineOrganizationsAsync(System.String,System.String,System.String,System.Uri,System.Boolean,System.String,Microsoft.PowerPlatform.Dataverse.Client.Auth.PromptBehavior,System.Boolean,Microsoft.PowerPlatform.Dataverse.Client.Model.DiscoveryServer,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
             Discovers Organizations Using the global discovery service.
             <para>Provides a User ID / Password flow for authentication to the online discovery system.
             You can also provide the discovery instance you wish to use, or not pass it.  If you do not specify a discovery region, the commercial global region is used</para>
            </summary>
            <param name="userId">User ID to login with</param>
            <param name="password">Password to use to login with</param>
            <param name="discoServer">(Optional) URI of the discovery server</param>
            <param name="clientId">The client Id.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior.</param>
            <param name="isOnPrem">The deployment type: OnPrem or Online.</param>
            <param name="authority">The authority provider for OAuth tokens. Unique if any already known.</param>
            <param name="useDefaultCreds">(Optional) if specified, tries to use the current user</param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns>A collection of organizations</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DiscoverOnlineOrganizationsAsync(System.Func{System.String,System.Threading.Tasks.Task{System.String}},System.Uri,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Discovers Organizations Using the global discovery service and an external source for access tokens
            </summary>
            <param name="discoveryServiceUri">Global discovery base URI to use to connect too,  if null will utilize the commercial Global Discovery Server.</param>
            <param name="tokenProviderFunction">Function that will provide access token to the discovery call.</param>
            <param name="tokenCacheStorePath">(optional) path to log store</param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RemoveOAuthTokenCache(System.String)">
            <summary>
            Clear the persistent and in-memory store cache
            </summary>
            <param name="tokenCachePath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ExecuteWebRequest(System.Net.Http.HttpMethod,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Executes a web request against Xrm WebAPI.
            </summary>
            <param name="queryString">Here you would pass the path and query parameters that you wish to pass onto the WebAPI.
            The format used here is as follows:
              {APIURI}/api/data/v{instance version}/querystring.
            For example,
                if you wanted to get data back from an account,  you would pass the following:
                    accounts(id)
                    which creates:  get - https://myinstance.crm.dynamics.com/api/data/v9.0/accounts(id)
                if you were creating an account, you would pass the following:
                    accounts
                    which creates:  post - https://myinstance.crm.dynamics.com/api/data/v9.0/accounts - body contains the data.
                    </param>
            <param name="method">Method to use for the request</param>
            <param name="body">Content your passing to the request</param>
            <param name="customHeaders">Headers in addition to the default headers added by for Executing a web request</param>
            <param name="contentType">Content Type attach to the request.  this defaults to application/json if not set.</param>
            <param name="cancellationToken">Cancellation token for the request</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ExecuteOrganizationRequest(Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.Boolean)">
            <summary>
            Executes a Dataverse Organization Request (thread safe) and returns the organization response object. Also adds metrics for logging support.
            </summary>
            <param name="req">Organization Request  to run</param>
            <param name="logMessageTag">Message identifying what this request in logging.</param>
            <param name="useWebAPI">When True, uses the webAPI to execute the organization Request.  This works for only Create at this time.</param>
            <returns>Result of request or null.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ExecuteOrganizationRequestAsync(Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Executes a Dataverse Organization Request (In Async mode) and returns the organization response object. Also adds metrics for logging support.
            </summary>
            <param name="req">Organization Request  to run</param>
            <param name="logMessageTag">Message identifying what this request in logging.</param>
            <param name="useWebAPI">When True, uses the webAPI to execute the organization Request.  This works for only Create at this time.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Result of request or null.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Command_ExecuteAsync(Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Executes a Dataverse Create Request and returns the organization response object.
            Uses an Async pattern to allow for the thread to be backgrounded.
            </summary>
            <param name="req">Request to run</param>
            <param name="errorStringCheck">Formatted Error string</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Result of create request or null.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Command_ExecuteAsyncImpl(Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Executes a Dataverse Create Request and returns the organization response object.
            </summary>
            <param name="req">Request to run</param>
            <param name="errorStringCheck">Formatted Error string</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <param name="cancellationToken"></param>
            <returns>Result of create request or null.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Command_Execute(Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.Boolean)">
            <summary>
            Executes a Dataverse Create Request and returns the organization response object.
            </summary>
            <param name="req">Request to run</param>
            <param name="errorStringCheck">Formatted Error string</param>
            <param name="bypassPluginExecution">Adds the bypass plugin behavior to this request. Note: this will only apply if the caller has the prvBypassPlugins permission to bypass plugins.  If its attempted without the permission the request will fault.</param>
            <returns>Result of create request or null.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ShouldRetry(Microsoft.Xrm.Sdk.OrganizationRequest,System.Exception,System.Int32,System.Boolean@)">
            <summary>
            retry request or not
            </summary>
            <param name="req">req</param>
            <param name="ex">exception</param>
            <param name="retryCount">retry count</param>
            <param name="isThrottlingRetry">when true, indicates that the retry was caused by a throttle tripping.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.MakeSecureString(System.String)">
            <summary>
             Makes a secure string
            </summary>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ValidateConnectionLive">
            <summary>
            Validates that a connection is live and connected. Throws an exception if the connection is not active. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Associate(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Issues an Associate Request to Dataverse.
            </summary>
            <param name="entityName">Entity Name to associate to</param>
            <param name="entityId">ID if Entity to associate to</param>
            <param name="relationship">Relationship Name</param>
            <param name="relatedEntities">Entities to associate</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Create(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Issues a Create request to Dataverse
            </summary>
            <param name="entity">Entity to create</param>
            <returns>ID of newly created entity</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Delete(System.String,System.Guid)">
            <summary>
            Issues a Delete request to Dataverse
            </summary>
            <param name="entityName">Entity name to delete</param>
            <param name="id">ID if entity to delete</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Disassociate(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Issues a Disassociate Request to Dataverse.
            </summary>
            <param name="entityName">Entity Name to disassociate from</param>
            <param name="entityId">ID if Entity to disassociate from</param>
            <param name="relationship">Relationship Name</param>
            <param name="relatedEntities">Entities to disassociate</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Execute(Microsoft.Xrm.Sdk.OrganizationRequest)">
            <summary>
            Executes a general organization request
            </summary>
            <param name="request">Request object</param>
            <returns>Response object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Retrieve(System.String,System.Guid,Microsoft.Xrm.Sdk.Query.ColumnSet)">
            <summary>
            Issues a Retrieve Request to Dataverse
            </summary>
            <param name="entityName">Entity name to request</param>
            <param name="id">ID of the entity to request</param>
            <param name="columnSet">ColumnSet to request</param>
            <returns>Entity object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RetrieveMultiple(Microsoft.Xrm.Sdk.Query.QueryBase)">
            <summary>
            Issues a RetrieveMultiple Request to Dataverse
            </summary>
            <param name="query">Query to Request</param>
            <returns>EntityCollection Result</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Update(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Issues an update to Dataverse.
            </summary>
            <param name="entity">Entity to update into Dataverse</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.AssociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Associate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CreateAsync(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <returns>The ID of the created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DeleteAsync(System.String,System.Guid)">
            <summary>
            Delete instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DisassociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Disassociate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ExecuteAsync(Microsoft.Xrm.Sdk.OrganizationRequest)">
            <summary>
            Perform an action in an organization specified by the request.
            </summary>
            <param name="request">Refer to SDK documentation for list of messages that can be used.</param>
            <returns>Results from processing the request</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RetrieveAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Query.ColumnSet)">
            <summary>
            Retrieves instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
            <param name="columnSet">Column Set collection to return with the request</param>
            <returns>Selected Entity</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RetrieveMultipleAsync(Microsoft.Xrm.Sdk.Query.QueryBase)">
            <summary>
            Retrieves a collection of entities
            </summary>
            <param name="query"></param>
            <returns>Returns an EntityCollection Object containing the results of the query</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.UpdateAsync(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Updates an entity and process any related entities
            </summary>
            <param name="entity">entity to update</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.AssociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection,System.Threading.CancellationToken)">
            <summary>
            Associate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CreateAsync(Microsoft.Xrm.Sdk.Entity,System.Threading.CancellationToken)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>The ID of the created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CreateAndReturnAsync(Microsoft.Xrm.Sdk.Entity,System.Threading.CancellationToken)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Returns the newly created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.CreateAndReturnAsync(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Create an entity and process any related entities
            </summary>
            <param name="entity">entity to create</param>
            <returns>Returns the newly created record</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DeleteAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.DisassociateAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection,System.Threading.CancellationToken)">
            <summary>
            Disassociate an entity with a set of entities
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="relationship"></param>
            <param name="relatedEntities"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.ExecuteAsync(Microsoft.Xrm.Sdk.OrganizationRequest,System.Threading.CancellationToken)">
            <summary>
            Perform an action in an organization specified by the request.
            </summary>
            <param name="request">Refer to SDK documentation for list of messages that can be used.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Results from processing the request</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RetrieveAsync(System.String,System.Guid,Microsoft.Xrm.Sdk.Query.ColumnSet,System.Threading.CancellationToken)">
            <summary>
            Retrieves instance of an entity
            </summary>
            <param name="entityName">Logical name of entity</param>
            <param name="id">Id of entity</param>
            <param name="columnSet">Column Set collection to return with the request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Selected Entity</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.RetrieveMultipleAsync(Microsoft.Xrm.Sdk.Query.QueryBase,System.Threading.CancellationToken)">
            <summary>
            Retrieves a collection of entities
            </summary>
            <param name="query"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Returns an EntityCollection Object containing the results of the query</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.UpdateAsync(Microsoft.Xrm.Sdk.Entity,System.Threading.CancellationToken)">
            <summary>
            Updates an entity and process any related entities
            </summary>
            <param name="entity">entity to update</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServiceClient.Dispose">
            <summary>
            Disposed the resources used by the ServiceClient.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.TestingHelper">
            <summary>
            Helper class that gets/sets the data for connecting to debug online env.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TestingHelper.SelectedOption">
            <summary>
            Stores the string identifier for the currently selected online region(the one selected from online region drop down).
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TestingHelper.Instance">
            <summary>
            Returns an instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TestingHelper.IsDebugEnvSelected">
            <summary>
            Method to check if currently selected online region in UI is custom debug env. or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TestingHelper.GetIssuerUriForSelectedEnv">
            <summary>
            Gets the issuer Uri for the selected debug env.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.TestingHelper._servers">
            <summary>
            These dictionaries contain the mapping of shortName to the issuerUri for Live/OSDP servers.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo">
            <summary>
            Data container for Live/OSDP debug env.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.DiscoveryServer">
            <summary>
            Gives the discovery server url
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.DisplayName">
            <summary>
            Gets/Sets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.ShortName">
            <summary>
            Gets/Sets the shortname(should be unique).
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.RequiresRegionalDiscovery">
            <summary>
            Sets the restricted status of the instance. ( restricted means it is not in the global discovery servers )
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.RegionalGlobalDiscoveryUri">
            <summary>
            regional global discovery server
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.GeoCode">
            <summary>
            Geo Code
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.ServerInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.RefreshListenerDelegate">
            <summary>
            Refresh listener delegate
            </summary>
            <param name="listenerCollection"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.TraceListenerBroker">
            <summary>
            Trace listener broker class
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceListenerBroker.RegisterTraceLogger(Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase)">
            <summary>
            Method to register trace logger
            </summary>
            <param name="traceLogger"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceListenerBroker.UnRegisterTraceLogger(Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase)">
            <summary>
            Method to un register trace logger
            </summary>
            <param name="traceLogger"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceListenerBroker.PublishTraceListeners">
            <summary>
            Method to refresh listeners for all the registered trace loggers
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase">
            <summary>
            TraceLoggerBase Class.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase._lastError">
            <summary>
            String Builder Info
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase._traceSourceName">
            <summary>
            string _traceSourceName private field
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase._lastException">
            <summary>
            Last Exception
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Source">
            <summary>
            Trace source
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.TraceSourceName">
            <summary>
            Trace Name
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.LastError">
            <summary>
            Last Error from Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.LastException">
            <summary>
            Last Exception from Dataverse
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.CurrentTraceLevel">
            <summary>
            Current Trace level
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.#ctor">
            <summary>
            default TraceLoggerBase constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Initialize">
            <summary>
            Initialize Trace Source
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.ResetLastError">
            <summary>
            Reset the last Stored Error
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Log(System.String)">
            <summary>
            Log a Message as an Information event.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Log(System.String,System.Diagnostics.TraceEventType)">
            <summary>
            Log a Trace event
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Log(System.String,System.Diagnostics.TraceEventType,System.Exception)">
            <summary>
            Log a Trace event
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Log(System.Exception)">
            <summary>
            Logg an error with an Exception
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.RefreshListeners(System.Collections.Generic.List{Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting})">
            <summary>
            To refresh listeners
            </summary>
            <param name="traceSourceSettingCollection"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceLoggerBase.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting">
            <summary>
            Parameter for delegate - RegisterdTraceListeners in TraceControlSettingsBase class
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting.SourceName">
            <summary>
            Source name of trace listner
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting.TraceLevel">
            <summary>
            Override Trace Level setting 
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting.TraceListeners">
            <summary>
            List of trace listners
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting.#ctor(System.String,System.Diagnostics.SourceLevels)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSettingStore">
            <summary>
            Trace setting store
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSettingStore.TraceSourceSettingsCollection">
            <summary>
            Source name of trace listner
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSettingStore.AddTraceSettingsToStore(Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSetting)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.TraceSourceSettingStore.GetTraceSourceSettings(System.String)">
            <summary>
            
            </summary>
            <param name="sourceName"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utils.AppSettingsHelper">
            <summary>
            Manages reading settings from app.config of associated files. 
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.AppSettingsHelper.GetAppSetting``1(System.String,``0,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Reads app setting from config file; if not found, returns <param name="defaultValue">the default value</param>.
            </summary>
            <param name="key">The setting key</param>
            <param name="logSink">Logger to use if available, else will be created and used for this session only</param>
            <return>Returns the setting value or default value.</return>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.AppSettingsHelper.GetAppSettingTimeSpan(System.String,Microsoft.PowerPlatform.Dataverse.Client.Utils.AppSettingsHelper.TimeSpanFromKey,System.TimeSpan,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Picks up a string value from the app config and converts it to the string value version based on the format provided. 
            </summary>
            <param name="key">Key to lookup from the appconfig</param>
            <param name="format">TimeSpan format to convert from ( "d" = days, "m" = Minuets , "h" = hours , "s" = seconds , "ms" = Milliseconds ) </param>
            <param name="defaultValue">default value to use of the key is not found</param>
            <param name="logSink">Logger to use if available, else will be created and used for this session only</param>
            <returns>Determined timeSpan value.</returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utils.AppSettingsHelper.TimeSpanFromKey">
            <summary>
            Formatting Value for Text to TimeSpan conversion. 
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseConnectionException">
            <summary>
            Used to encompass a ServiceClient Connection Centric exceptions
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseConnectionException.#ctor(System.String)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="message">Error Message</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="message">Error Message</param>
            <param name="innerException">Supporting Exception</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="serializationInfo"></param>
            <param name="streamingContext"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseOperationException">
            <summary>
            Used to encompass a ServiceClient Operation Exception
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseOperationException.#ctor(System.String)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="message">Error Message</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseOperationException.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Rest.HttpOperationException)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="message">Error Message</param>
            <param name="errorCode">Error code</param>
            <param name="data">Data Properties</param>
            <param name="helpLink">Help Link</param>
            <param name="httpOperationException"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseOperationException.GenerateClientOperationException(Microsoft.Rest.HttpOperationException)">
            <summary>
            Creates a CdsService Client Exception from a httpOperationResult.
            </summary>
            <param name="httpOperationException"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="message">Error Message</param>
            <param name="innerException">Supporting Exception</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.DataverseOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a CdsService Client Exception
            </summary>
            <param name="serializationInfo"></param>
            <param name="streamingContext"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utils.MSALLoggerCallBack">
            <summary>
            This class will be used to support hooking into MSAL Call back logic.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Utils.MSALLoggerCallBack.EnabledPIILogging">
            <summary>
            Enabled PII logging for this connection.
            if this flag is set, it will override the value from app config.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.MSALLoggerCallBack.Log(Microsoft.Identity.Client.LogLevel,System.String,System.Boolean)">
             <summary>
            
             </summary>
             <param name="level"></param>
             <param name="message"></param>
             <param name="containsPii"></param>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utils.PartyListHelper.ParticipationType">
            <summary>
            Participation types for activity parties.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utils.PartyListHelper.PartyListMap">
            <summary>
            This dictionary holds the mapping for the attribute names and their PartiticipationType values.
            This is currently used to determine the attribute related to a given activity party row
            for enforcing FLS.
            We will need to update this mapping when an attribute is made as a partylist attribute
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utils.PartyListHelper.GetParticipationtypeMasks(System.String)">
            <summary>
            Map attributeKeyName to Participation Type
            </summary>
            <param name="partyKeyName"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utils.ClientServiceProviders._instance">
            <summary>
            Private property accessor for service provider
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.Utils.ClientServiceProviders.Instance">
            <summary>
            Instance of Service providers.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor">
            <summary>
            Stores Parsed connection info from the use of a CDS connection string.
            This is only populated when the CDS Connection string object is used, this is read only.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.sampleClientId">
            <summary>
            Sample / stand-in appID used when replacing O365 Auth
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.sampleRedirectUrl">
            <summary>
            Sample / stand-in redirect URI used when replacing o365 Auth
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.ServiceUri">
            <summary>
            URL of the Service being connected too.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.AuthenticationType">
            <summary>
            Authentication Type being used for this connection
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.PromptBehavior">
            <summary>
            OAuth Prompt behavior.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.HomeRealmUri">
            <summary>
            Claims based Delegated Authentication Url.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.ClientCredentials">
            <summary>
            Client credentials parsed from connection string
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.DomainName">
            <summary>
            Domain of User
            Active Directory Auth only.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.UserId">
            <summary>
            User ID of the User connection to CDS
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.Password">
            <summary>
            Password of user, parsed from connection string
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.CertStoreName">
            <summary>
            Certificate Store Name
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.CertThumbprint">
            <summary>
            Cert Thumbprint ID
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.SkipDiscovery">
            <summary>
            if set to true, then the org URI should be used directly.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.ClientId">
            <summary>
            Client ID used in the connection string
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.ClientSecret">
            <summary>
            Client Secret passed from the connection string
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.Organization">
            <summary>
            Organization Name parsed from the connection string.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.IsOnPremOauth">
            <summary>
            Set if the connection string is for an onPremise connection
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.Geo">
            <summary>
            CDS region determined by the connection string
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.RedirectUri">
            <summary>
            OAuth Redirect URI
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.TokenCacheStorePath">
            <summary>
            OAuth Token Store Path
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.UseUniqueConnectionInstance">
            <summary>
            When true, specifies a unique instance of the connection should be created.
            </summary>
        </member>
        <member name="P:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.UseCurrentUser">
            <summary>
            When set to true and oAuth Mode ( not Cert ) attempts to run the login using the current user identity.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.SetOrgnameAndOnlineRegion(System.Uri)">
            <summary>
            Get the organization name and online region from the org
            </summary>
            <param name="serviceUri"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.DataverseConnectionStringProcessor.Parse(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parse the connection sting
            </summary>
            <param name="connectionString"></param>
            <param name="logger">Logging provider <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.ErrorCodes">
            <summary>
            https://docs.microsoft.com/en-us/powerapps/developer/data-platform/org-service/web-service-error-codes
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ErrorCodes.ThrottlingTimeExceededError">
            <summary>
            Combined execution time of incoming requests exceeded limit of {0} milliseconds over time window of {1} seconds. Decrease number of concurrent requests or reduce the duration of requests and try again later.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ErrorCodes.ThrottlingBurstRequestLimitExceededError">
            <summary>
            Number of requests exceeded the limit of {0} over time window of {1} seconds.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ErrorCodes.ThrottlingConcurrencyLimitExceededError">
            <summary>
            Number of concurrent requests exceeded the limit of {0}.
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties">
            <summary>
            Properties valid for the extraParameters collection of ImportSolution.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.DESIREDLAYERORDERPARAM">
            <summary>
            Parameter used to change the default layering behavior during solution import
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.ASYNCRIBBONPROCESSING">
            <summary>
            Parameter used to specify whether Solution Import processed ribbon metadata asynchronously
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.SOLUTIONNAMEPARAM">
            <summary>
            Parameter used to pass the solution name - Telemetry only
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.COMPONENTPARAMETERSPARAM">
            <summary>
            Parameter used to pass a collection of component parameters to the import job.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.CONVERTTOMANAGED">
            <summary>
            Direct the system to convert any matching unmanaged customizations into your managed solution
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.TEMPLATESUFFIX">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.ImportSolutionProperties.ISTEMPLATEMODE">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utilities">
            <summary>
            Utility functions the ServiceClient assembly.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.GetOrgnameAndOnlineRegionFromServiceUri(System.Uri,System.String@,System.String@,System.Boolean@)">
            <summary>
            Get the organization name and on-line region from the Uri
            </summary>
            <param name="serviceUri">Service Uri to parse</param>
            <param name="isOnPrem">if OnPrem, will be set to true, else false.</param>
            <param name="onlineRegion">Name of the Dataverse Online Region serving this request</param>
            <param name="organizationName">Name of the Organization extracted from the Service URI</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.DeterminOrgDataFromOrgInfo(Microsoft.PowerPlatform.Dataverse.Client.Model.OrgList,System.String)">
            <summary>
            returns ( if possible ) the org detail for a given organization name from the list of orgs in discovery
            </summary>
            <param name="orgList">OrgList to Parse though</param>
            <param name="organizationName">Name to find</param>
            <returns>Found Organization Instance or Null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.DeterminOrgDataFromOrgInfo(Microsoft.Xrm.Sdk.Discovery.OrganizationDetailCollection,System.String)">
            <summary>
            returns ( if possible ) the org detail for a given organization name from the list of orgs in discovery
            </summary>
            <param name="orgList">OrgList to Parse though</param>
            <param name="organizationName">Name to find</param>
            <returns>Found Organization Instance or Null</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.DeterminDiscoveryDataFromOrgDetail(System.Uri,System.Boolean@,System.String)">
            <summary>
            Parses an OrgURI to determine what the supporting discovery server is.
            </summary>
            <param name="serviceUri">Service Uri to parse</param>
            <param name="Geo">Geo Code for region (Optional)</param>
            <param name="isOnPrem">if OnPrem, will be set to true, else false.</param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.IsValidOnlineHost(System.Uri)">
            <summary>
            Looks at the URL provided and determines if the URL is a valid online URI
            </summary>
            <param name="hostUri">URI to examine</param>
            <returns>Returns True if the URI is recognized as online, or false if not.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.IsRequestValidForTranslationToWebAPI(Microsoft.Xrm.Sdk.OrganizationRequest,System.Boolean)">
            <summary>
            Determines if the request type can be translated to WebAPI
            This is a temp method to support the staged transition to the webAPI and will be removed or reintegrated with the overall pipeline at some point in the future.
            </summary>
            <param name="req"></param>
            <param name="inLoginFlow"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestNameToHttpVerb(System.String)">
            <summary>
            Returns Http request method based on request message name
            </summary>
            <param name="requestName">request name</param>
            <returns>Http method</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ConstructWebApiRequestUrl(Microsoft.Xrm.Sdk.OrganizationRequest,System.Net.Http.HttpMethod,Microsoft.Xrm.Sdk.Entity,Microsoft.Xrm.Sdk.Metadata.EntityMetadata)">
            <summary>
            Constructs Web API request url and adds public request properties to the url as key/value pairs
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RetryRequest(Microsoft.Xrm.Sdk.OrganizationRequest,System.Guid,System.TimeSpan,System.Diagnostics.Stopwatch,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger,System.Nullable{System.Guid},System.Boolean,System.TimeSpan,System.Exception,System.String,System.Int32@,System.Boolean,System.String)">
            <summary>
            retry request
            </summary>
            <param name="req">request</param>
            <param name="requestTrackingId">requestTrackingId</param>
            <param name="LockWait">LockWait</param>
            <param name="logDt">logDt</param>
            <param name="logEntry">Dataverse TraceLogger</param>
            <param name="sessionTrackingId">sessionTrackingId</param>
            <param name="disableConnectionLocking">disableConnectionLocking</param>
            <param name="retryPauseTimeRunning">retryPauseTimeRunning</param>
            <param name="ex">ex</param>
            <param name="errorStringCheck">errorStringCheck</param>
            <param name="retryCount">retryCount</param>
            <param name="isThrottled">when set indicated this was caused by a Throttle</param>
            <param name="webUriReq"></param>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ToExpandoObject(Microsoft.Xrm.Sdk.Entity,Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility,System.Net.Http.HttpMethod,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Parses an attribute array into a object that can be used to create a JSON request.
            </summary>
            <param name="sourceEntity">Entity to process</param>
            <param name="mUtil">Metadata interface utility</param>
            <param name="requestedMethod">Operation being executed</param>
            <param name="logger">Log sink</param>
            <returns>ExpandoObject</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.IsAttributeValidForOperation(Microsoft.Xrm.Sdk.Metadata.AttributeMetadata,System.Net.Http.HttpMethod)">
            <summary>
            Checks if the operation being preformed is permitted for the attribute.
            </summary>
            <param name="attrib"></param>
            <param name="requestedMethod"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.UpdateEntityAttributesForPrimaryId(Microsoft.Xrm.Sdk.Entity,Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility)">
            <summary>
            checks to see if an attribute has been added to the collection containing the ID of the entity .
            this is required for the WebAPI to properly function.
            </summary>
            <param name="sourceEntity"></param>
            <param name="mUtil"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ReleatedEntitiesToExpandoObject(System.Dynamic.ExpandoObject,System.String,Microsoft.Xrm.Sdk.RelatedEntityCollection,Microsoft.PowerPlatform.Dataverse.Client.MetadataUtility,System.Net.Http.HttpMethod,Microsoft.PowerPlatform.Dataverse.Client.DataverseTraceLogger)">
            <summary>
            Handle general related entity collection construction
            </summary>
            <param name="rootExpando">Object being added too</param>
            <param name="entityName">parent entity</param>
            <param name="entityCollection">collection of relationships</param>
            <param name="mUtil">meta-data utility</param>
            <param name="requestedMethod">Operation being executed</param>
            <param name="logger">Logger</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ExtractKeyNameFromRelationship(System.String,System.String,System.Boolean@,Microsoft.Xrm.Sdk.Metadata.EntityMetadata)">
            <summary>
            Helper to extract key name from one of the relationships.
            </summary>
            <param name="schemaName"></param>
            <param name="entityName"></param>
            <param name="isArrayRequired"></param>
            <param name="eData"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ParseAltKeyCollection(Microsoft.Xrm.Sdk.KeyAttributeCollection)">
            <summary>
            Parses Key attribute collection for alt key support.
            </summary>
            <param name="keyValues">alt key's for object</param>
            <returns>webAPI compliant key string</returns>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities._autoRetryRetrieveEntityList">
            <summary>
            List of entities to retry retrieves on.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ShouldAutoRetryRetrieveByEntityName(System.String)">
            <summary>
            if the Incoming query has an entity on the retry list, returns true.  else returns false.
            </summary>
            <param name="queryStringToParse">string containing entity name to check against</param>
            <returns>true if found, false if not</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.AddScope(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates or Adds scopes and returns the current scope
            </summary>
            <param name="scopeToAdd"></param>
            <param name="currentScopes"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders">
            <summary>
            Request Headers used by comms to Dataverse
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.USER_AGENT_HTTP_HEADER">
            <summary>
            Populated with the host process
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.X_MS_CLIENT_SESSION_ID">
            <summary>
            Session ID used to track all operations associated with a given group of calls.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.X_MS_CLIENT_REQUEST_ID">
            <summary>
            PerRequest ID used to track a specific request.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.CONTENT_TYPE">
            <summary>
            Content type of WebAPI request.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.AAD_CALLER_OBJECT_ID_HTTP_HEADER">
            <summary>
            Header loaded with the AADObjectID of the user to impersonate
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.CALLER_OBJECT_ID_HTTP_HEADER">
            <summary>
            Header loaded with the Dataverse user ID of the user to impersonate
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.AUTHORIZATION_HEADER">
            <summary>
            Header used to pass the token for the user
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.CONNECTION_KEEP_ALIVE">
            <summary>
            Header requesting the connection be kept alive.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.FORCE_CONSISTENCY">
            <summary>
            Header requiring Cache Consistency Server side.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.BYPASSCUSTOMPLUGINEXECUTION">
            <summary>
            This key used to indicate if the custom plugins need to be bypassed during the execution of the request.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.SOLUTIONUNIQUENAME">
            <summary>
            key used to apply the operation to a given solution.
            See: https://docs.microsoft.com/powerapps/developer/common-data-service/org-service/use-messages#passing-optional-parameters-with-a-request
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.SUPPRESSDUPLICATEDETECTION">
            <summary>
            used to apply duplicate detection behavior to a given request.
            See: https://docs.microsoft.com/powerapps/developer/common-data-service/org-service/use-messages#passing-optional-parameters-with-a-request
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.TAG">
            <summary>
            used to pass data though Dataverse to a plugin or downstream system on a request.
            See: https://docs.microsoft.com/en-us/powerapps/developer/common-data-service/org-service/use-messages#add-a-shared-variable-from-the-organization-service
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.CONCURRENCYBEHAVIOR">
            <summary>
            used to identify concurrencybehavior property in an organization request.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.RequestHeaders.DATAVERSEHEADERPROPERTYPREFIX">
            <summary>
            Dataverse Platform Property Prefix
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ResponseHeaders.RECOMMENDEDDEGREESOFPARALLELISM">
            <summary>
            Recomended number of client connection threads Hint 
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ResponseHeaders.SETCOOKIE">
            <summary>
            header for Cookie's
            </summary>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums">
            <summary>
            Minim Version numbers for various features of Dataverse API's.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.IsFeatureValidForEnviroment(System.Version,System.Version)">
            <summary>
            returns true of the feature version is valid for this environment.
            </summary>
            <param name="instanceVersion">Instance version of the Dataverse Instance</param>
            <param name="featureVersion">MinFeatureVersion</param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.DataverseVersionForThisAPI">
            <summary>
            Lowest server version that can be connected too.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.BatchOperations">
            <summary>
            Minimum version that supports batch Operations.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.ImportHoldingSolution">
            <summary>
            Minimum version that supports holding solutions.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.InternalUpgradeSolution">
            <summary>
            Minimum version that supports the Internal Upgrade Flag
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.AADCallerIDSupported">
            <summary>
            MinVersion that supports AAD Caller ID.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.SessionTrackingSupported">
            <summary>
            MinVersion that supports Session ID Telemetry Tracking.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.ForceConsistencySupported">
            <summary>
            MinVersion that supports Forcing Cache Sync.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.AllowBypassCustomPlugin">
            <summary>
            Minimum version to allow plug in bypass param.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.WebAPISupported">
            <summary>
            Minimum version supported by the Web API
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.AllowAsyncRibbonProcessing">
            <summary>
            Minimum version supported for AsyncRibbonProcessing.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.AllowComponetInfoProcessing">
            <summary>
            Minimum version supported for Passing Component data to Dataverse as part of solution deployment..
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.AllowTemplateSolutionImport">
            <summary>
            Minimum version support for Solution tagging.
            </summary>
        </member>
        <member name="F:Microsoft.PowerPlatform.Dataverse.Client.Utilities.FeatureVersionMinimums.AllowImportSolutionAsyncV2">
            <summary>
            Minimum version support for ImportSolutionAsync API.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.GetAllCookiesFromHeader(System.String,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.String})">
            <summary>
            Manage Pushing Cookies Forward in a switchable manner.
            </summary>
            <param name="strHeader">Header string to start with</param>
            <param name="cookieCollection">Collection of cookies currently in the system</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.GetAllCookiesFromHeader(System.String[],System.Collections.Concurrent.ConcurrentDictionary{System.String,System.String})">
            <summary>
            Manage Pushing Cookies Forward in a switchable manner.
            </summary>
            <param name="strHeaderList">Header string to start with</param>
            <param name="cookieCollection"> collection of cookies currently in the system</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ConvertCookieHeaderToArrayList(System.String)">
            <summary>
            Create an array list of cookies
            </summary>
            <param name="strCookHeader"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.ConvertCookieArraysToCookieDictionary(System.Collections.ArrayList,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.String})">
            <summary>
            Generate Cookie collection for the Array.
            </summary>
            <param name="al"></param>
            <param name="cookieCollection"> Cookie collection to populate or update</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.Utilities.CleanUpHeaderKeys(System.Net.WebHeaderCollection)">
            <summary>
            Fix for issue in .net core which is not using proper separators for User-Agent and Server Headers
            </summary>
            <param name="headerCollection">Collection to clean up values for</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil">
            <summary>
            Utility class for XML related operations.
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.#ctor">
            <summary>
            Prevent XmlUtil from ever being constructed
            </summary>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlReader(System.String)">
            <summary>
            Creates an XmlReader object with secure default property values.
            </summary>
            <param name="xml">The string to get the data from.</param>
            <returns>the new XmlReader object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlReader(System.String,System.Boolean)">
            <summary>
            Creates an XmlReader object with secure default property values and given whitespace setting.
            </summary>
            <param name="xml">The string to get the data from.</param>
            <param name="preserveWhiteSpace">Whether the whitespaces are to be preserved or not.</param>
            <returns>the new XmlReader object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlReader(System.IO.Stream)">
            <summary>
            Creates an XmlReader object with secure default property values.
            </summary>
            <param name="xmlStream">Xml stream.</param>
            <returns>The new XmlReader object.</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlDocument">
            <summary>
            Creates an XmlDocument object with secure default property values.
            </summary>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlDocument(System.Xml.XmlReader)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            </summary>
            <param name="reader">The XmlTextReader to get the data from.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlDocument(System.IO.Stream)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            Extracts xml from the given stream and reads it into the XmlDocument.
            </summary>
            <param name="input">The XML stream to load.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlDocument(System.String)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            Loads the given XML into the XmlDocument.
            </summary>
            <param name="xml">The XML to load.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlDocument(System.String,System.Boolean)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            Loads the given XML into the XmlDocument.
            This overload is useful when a whitespace only element value is valid content.
            </summary>
            <param name="xml">The XML to load.</param>
            <param name="preserveWhiteSpace">Whether the whitespaces are to be preserved or not.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlWriter(System.IO.TextWriter,System.Boolean)">
            <summary>
            Creates an XmlWriter on top of the provided TextWriter as per
            the .Net Framework guidelines.
            </summary>
            <param name="textWriter">TextWriter to write into</param>
            <param name="indented">True to indent the output</param>
            <returns>An XmlWriter</returns>
        </member>
        <member name="M:Microsoft.PowerPlatform.Dataverse.Client.XmlUtil.CreateXmlWriter(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates an XmlWriter which writes to the specified filename using
            the specified encoding.
            </summary>
            <param name="fileName">File to write to</param>
            <param name="encoding">Encoding to use</param>
            <param name="indented">True to indent the output</param>
            <returns>An XmlWriter</returns>
        </member>
    </members>
</doc>
